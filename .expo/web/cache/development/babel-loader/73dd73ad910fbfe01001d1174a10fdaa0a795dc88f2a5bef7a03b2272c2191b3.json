{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { Searchbar } from \"react-native-paper\";\nimport { useState } from \"react\";\nimport useWindowDimensions from \"react-native-web/dist/exports/useWindowDimensions\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function BookSearchBar(_ref) {\n  var setBooks = _ref.setBooks,\n    data = _ref.data;\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    searchBarText = _useState2[0],\n    setSearchBarText = _useState2[1];\n  var _useWindowDimensions = useWindowDimensions(),\n    width = _useWindowDimensions.width;\n  return _jsx(Searchbar, {\n    placeholder: \"Search\",\n    value: searchBarText,\n    onChangeText: function onChangeText(text) {\n      if (!data) return;\n      setBooks(data.filter(function (f) {\n        var _f$name;\n        return ((_f$name = f.name) == null ? void 0 : _f$name.toUpperCase().search(text.toUpperCase())) !== -1;\n      }));\n      if (text === \"\") {\n        setBooks(data);\n      }\n      setSearchBarText(text);\n    },\n    mode: \"view\",\n    style: {\n      width: width * 0.2 + 200,\n      marginTop: 20,\n      marginBottom: 20\n    }\n  });\n}","map":{"version":3,"names":["Searchbar","useState","useWindowDimensions","jsx","_jsx","BookSearchBar","_ref","setBooks","data","_useState","_useState2","_slicedToArray","searchBarText","setSearchBarText","_useWindowDimensions","width","placeholder","value","onChangeText","text","filter","f","_f$name","name","toUpperCase","search","mode","style","marginTop","marginBottom"],"sources":["/home/ojoquinhaa/Documentos/trabalho/inktone/fixar/components/Book/BookSearchBar.tsx"],"sourcesContent":["import { Searchbar } from \"react-native-paper\";\nimport { Book } from \"../../API/Book\";\nimport { Dispatch, SetStateAction, useState } from \"react\";\nimport { ScaledSize, useWindowDimensions } from \"react-native\";\ntype props = {\n  data: Book[];\n  setBooks: Dispatch<SetStateAction<Book[]>>;\n};\nexport default function BookSearchBar({ setBooks: setBooks, data }: props) {\n  const [searchBarText, setSearchBarText] = useState<string>(\"\");\n  const { width }: ScaledSize = useWindowDimensions();\n  return (\n    <Searchbar\n      placeholder=\"Search\"\n      value={searchBarText}\n      onChangeText={(text) => {\n        if (!data) return;\n        setBooks(\n          data.filter(\n            (f: Book) => f.name?.toUpperCase().search(text.toUpperCase()) !== -1\n          )\n        );\n        if (text === \"\") {\n          setBooks(data);\n        }\n        setSearchBarText(text);\n      }}\n      mode=\"view\"\n      style={{ width: width * 0.2 + 200, marginTop: 20, marginBottom: 20 }}\n    />\n  );\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,oBAAoB;AAE9C,SAAmCC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,mBAAA;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAM3D,eAAe,SAASC,aAAaA,CAAAC,IAAA,EAAsC;EAAA,IAAzBC,QAAQ,GAAAD,IAAA,CAAlBC,QAAQ;IAAYC,IAAI,GAAAF,IAAA,CAAJE,IAAI;EAC9D,IAAAC,SAAA,GAA0CR,QAAQ,CAAS,EAAE,CAAC;IAAAS,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAvDG,aAAa,GAAAF,UAAA;IAAEG,gBAAgB,GAAAH,UAAA;EACtC,IAAAI,oBAAA,GAA8BZ,mBAAmB,CAAC,CAAC;IAA3Ca,KAAK,GAAAD,oBAAA,CAALC,KAAK;EACb,OACEX,IAAA,CAACJ,SAAS;IACRgB,WAAW,EAAC,QAAQ;IACpBC,KAAK,EAAEL,aAAc;IACrBM,YAAY,EAAE,SAAAA,aAACC,IAAI,EAAK;MACtB,IAAI,CAACX,IAAI,EAAE;MACXD,QAAQ,CACNC,IAAI,CAACY,MAAM,CACT,UAACC,CAAO;QAAA,IAAAC,OAAA;QAAA,OAAK,EAAAA,OAAA,GAAAD,CAAC,CAACE,IAAI,qBAAND,OAAA,CAAQE,WAAW,CAAC,CAAC,CAACC,MAAM,CAACN,IAAI,CAACK,WAAW,CAAC,CAAC,CAAC,MAAK,CAAC,CAAC;MAAA,CACtE,CACF,CAAC;MACD,IAAIL,IAAI,KAAK,EAAE,EAAE;QACfZ,QAAQ,CAACC,IAAI,CAAC;MAChB;MACAK,gBAAgB,CAACM,IAAI,CAAC;IACxB,CAAE;IACFO,IAAI,EAAC,MAAM;IACXC,KAAK,EAAE;MAAEZ,KAAK,EAAEA,KAAK,GAAG,GAAG,GAAG,GAAG;MAAEa,SAAS,EAAE,EAAE;MAAEC,YAAY,EAAE;IAAG;EAAE,CACtE,CAAC;AAEN"},"metadata":{},"sourceType":"module","externalDependencies":[]}