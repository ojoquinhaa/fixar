{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useEffect, useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport useWindowDimensions from \"react-native-web/dist/exports/useWindowDimensions\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport UserAPI from \"../../API/User\";\nimport { useRoute, useTheme } from \"@react-navigation/native\";\nimport { Button, Text, TextInput } from \"react-native-paper\";\nimport * as SecureStory from \"expo-secure-store\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Accont(_ref) {\n  var setLogged = _ref.setLogged,\n    setToken = _ref.setToken;\n  var _useState = useState(),\n    _useState2 = _slicedToArray(_useState, 2),\n    user = _useState2[0],\n    setUser = _useState2[1];\n  var route = useRoute();\n  var token = route.params.token;\n  var theme = useTheme();\n  var _useWindowDimensions = useWindowDimensions(),\n    width = _useWindowDimensions.width;\n  var _useState3 = useState(),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password = _useState4[0],\n    setPassword = _useState4[1];\n  var _useState5 = useState(\"eye\"),\n    _useState6 = _slicedToArray(_useState5, 2),\n    eye = _useState6[0],\n    setEye = _useState6[1];\n  var _useState7 = useState(true),\n    _useState8 = _slicedToArray(_useState7, 2),\n    see = _useState8[0],\n    setSee = _useState8[1];\n  function changePassword() {\n    return _changePassword.apply(this, arguments);\n  }\n  function _changePassword() {\n    _changePassword = _asyncToGenerator(function* () {\n      var api = new UserAPI(\"\", \"\", token);\n      if (password === undefined) {\n        return alert(\"A senha inserida é inválida.\");\n      }\n      api.changePassword(password).then(function (res) {\n        if (res.message) {\n          setPassword(\"\");\n          return alert(\"Senha modificada com sucesso!\");\n        }\n        alert(\"A senha inserida é inválida.\");\n      });\n    });\n    return _changePassword.apply(this, arguments);\n  }\n  useEffect(function () {\n    var api = new UserAPI(\"\", \"\", token);\n    api.confirmLogin().then(setUser);\n  }, []);\n  return _jsx(View, {\n    style: {\n      flex: 1,\n      justifyContent: \"center\",\n      alignItems: \"center\"\n    },\n    children: _jsxs(View, {\n      style: {\n        width: width * 0.2 + 200\n      },\n      children: [_jsx(Text, {\n        variant: \"displayMedium\",\n        style: {\n          color: theme.colors.primary,\n          textAlign: \"center\",\n          marginBottom: 10\n        },\n        children: user == null ? void 0 : user.username\n      }), _jsxs(View, {\n        style: {\n          flex: 1,\n          flexDirection: \"row\",\n          justifyContent: \"space-around\",\n          marginBottom: 10\n        },\n        children: [_jsx(TextInput, {\n          mode: \"flat\",\n          value: password,\n          onChangeText: setPassword,\n          label: \"Nova senha\",\n          style: {\n            width: \"70%\"\n          },\n          secureTextEntry: see,\n          right: _jsx(TextInput.Icon, {\n            icon: eye,\n            onPress: function onPress() {\n              setSee(!see);\n              eye === \"eye\" ? setEye(\"eye-off\") : setEye(\"eye\");\n            }\n          })\n        }), _jsx(Button, {\n          mode: \"contained\",\n          onPress: _asyncToGenerator(function* () {\n            return yield changePassword();\n          }),\n          style: {\n            width: \"30%\",\n            borderRadius: 0\n          },\n          children: \"Mudar Senha\"\n        })]\n      }), _jsx(Button, {\n        mode: \"text\",\n        style: {\n          backgroundColor: \"#c83473\"\n        },\n        onPress: _asyncToGenerator(function* () {\n          setLogged(false);\n          setToken(\"\");\n          if (Platform.OS !== \"web\") {\n            yield SecureStory.deleteItemAsync(\"token\");\n          }\n        }),\n        children: \"Sair\"\n      })]\n    })\n  });\n}","map":{"version":3,"names":["useEffect","useState","View","useWindowDimensions","Platform","UserAPI","useRoute","useTheme","Button","Text","TextInput","SecureStory","jsx","_jsx","jsxs","_jsxs","Accont","_ref","setLogged","setToken","_useState","_useState2","_slicedToArray","user","setUser","route","token","params","theme","_useWindowDimensions","width","_useState3","_useState4","password","setPassword","_useState5","_useState6","eye","setEye","_useState7","_useState8","see","setSee","changePassword","_changePassword","apply","arguments","_asyncToGenerator","api","undefined","alert","then","res","message","confirmLogin","style","flex","justifyContent","alignItems","children","variant","color","colors","primary","textAlign","marginBottom","username","flexDirection","mode","value","onChangeText","label","secureTextEntry","right","Icon","icon","onPress","borderRadius","backgroundColor","OS","deleteItemAsync"],"sources":["/home/ojoquinhaa/Documentos/trabalho/inktone/fixar/components/Screen/Accont.tsx"],"sourcesContent":["import { Dispatch, SetStateAction, useEffect, useState } from \"react\";\nimport { View, useWindowDimensions, Platform } from \"react-native\";\nimport UserAPI, { User } from \"../../API/User\";\nimport { RouteProp, useRoute, useTheme } from \"@react-navigation/native\";\nimport { Button, Text, TextInput } from \"react-native-paper\";\nimport Book from \"../../API/Book\";\nimport * as SecureStory from \"expo-secure-store\";\n\ntype props = {\n  setToken: Dispatch<SetStateAction<string>>;\n  setLogged: Dispatch<SetStateAction<boolean>>;\n};\n\nexport default function Accont({ setLogged, setToken }: props) {\n  const [user, setUser] = useState<User>();\n\n  const route = useRoute<\n    RouteProp<{\n      Accont: {\n        token: string;\n        book: Book;\n        setToken: Dispatch<SetStateAction<string>>;\n        setLogged: Dispatch<SetStateAction<boolean>>;\n      };\n    }>\n  >();\n\n  const { token } = route.params;\n\n  const theme = useTheme();\n  const { width } = useWindowDimensions();\n\n  const [password, setPassword] = useState<string>();\n  const [eye, setEye] = useState<string>(\"eye\");\n  const [see, setSee] = useState<boolean>(true);\n  async function changePassword() {\n    const api = new UserAPI(\"\", \"\", token);\n    if (password === undefined) {\n      return alert(\"A senha inserida é inválida.\");\n    }\n    api.changePassword(password).then((res) => {\n      if (res.message) {\n        setPassword(\"\");\n        return alert(\"Senha modificada com sucesso!\");\n      }\n      alert(\"A senha inserida é inválida.\");\n    });\n  }\n\n  useEffect(() => {\n    const api = new UserAPI(\"\", \"\", token);\n    api.confirmLogin().then(setUser);\n  }, []);\n\n  return (\n    <View style={{ flex: 1, justifyContent: \"center\", alignItems: \"center\" }}>\n      <View style={{ width: width * 0.2 + 200 }}>\n        <Text\n          variant=\"displayMedium\"\n          style={{\n            color: theme.colors.primary,\n            textAlign: \"center\",\n            marginBottom: 10,\n          }}\n        >\n          {user?.username}\n        </Text>\n        <View\n          style={{\n            flex: 1,\n            flexDirection: \"row\",\n            justifyContent: \"space-around\",\n            marginBottom: 10,\n          }}\n        >\n          <TextInput\n            mode=\"flat\"\n            value={password}\n            onChangeText={setPassword}\n            label=\"Nova senha\"\n            style={{ width: \"70%\" }}\n            secureTextEntry={see}\n            right={\n              <TextInput.Icon\n                icon={eye}\n                onPress={() => {\n                  setSee(!see);\n                  eye === \"eye\" ? setEye(\"eye-off\") : setEye(\"eye\");\n                }}\n              />\n            }\n          />\n          <Button\n            mode=\"contained\"\n            onPress={async () => await changePassword()}\n            style={{ width: \"30%\", borderRadius: 0 }}\n          >\n            Mudar Senha\n          </Button>\n        </View>\n        <Button\n          mode=\"text\"\n          style={{ backgroundColor: \"#c83473\" }}\n          onPress={async () => {\n            setLogged(false);\n            setToken(\"\");\n            if (Platform.OS !== \"web\") {\n              await SecureStory.deleteItemAsync(\"token\");\n            }\n          }}\n        >\n          Sair\n        </Button>\n      </View>\n    </View>\n  );\n}\n"],"mappings":";;AAAA,SAAmCA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,mBAAA;AAAA,OAAAC,QAAA;AAEtE,OAAOC,OAAO;AACd,SAAoBC,QAAQ,EAAEC,QAAQ,QAAQ,0BAA0B;AACxE,SAASC,MAAM,EAAEC,IAAI,EAAEC,SAAS,QAAQ,oBAAoB;AAE5D,OAAO,KAAKC,WAAW,MAAM,mBAAmB;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAOjD,eAAe,SAASC,MAAMA,CAAAC,IAAA,EAAiC;EAAA,IAA9BC,SAAS,GAAAD,IAAA,CAATC,SAAS;IAAEC,QAAQ,GAAAF,IAAA,CAARE,QAAQ;EAClD,IAAAC,SAAA,GAAwBnB,QAAQ,CAAO,CAAC;IAAAoB,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAjCG,IAAI,GAAAF,UAAA;IAAEG,OAAO,GAAAH,UAAA;EAEpB,IAAMI,KAAK,GAAGnB,QAAQ,CASpB,CAAC;EAEH,IAAQoB,KAAK,GAAKD,KAAK,CAACE,MAAM,CAAtBD,KAAK;EAEb,IAAME,KAAK,GAAGrB,QAAQ,CAAC,CAAC;EACxB,IAAAsB,oBAAA,GAAkB1B,mBAAmB,CAAC,CAAC;IAA/B2B,KAAK,GAAAD,oBAAA,CAALC,KAAK;EAEb,IAAAC,UAAA,GAAgC9B,QAAQ,CAAS,CAAC;IAAA+B,UAAA,GAAAV,cAAA,CAAAS,UAAA;IAA3CE,QAAQ,GAAAD,UAAA;IAAEE,WAAW,GAAAF,UAAA;EAC5B,IAAAG,UAAA,GAAsBlC,QAAQ,CAAS,KAAK,CAAC;IAAAmC,UAAA,GAAAd,cAAA,CAAAa,UAAA;IAAtCE,GAAG,GAAAD,UAAA;IAAEE,MAAM,GAAAF,UAAA;EAClB,IAAAG,UAAA,GAAsBtC,QAAQ,CAAU,IAAI,CAAC;IAAAuC,UAAA,GAAAlB,cAAA,CAAAiB,UAAA;IAAtCE,GAAG,GAAAD,UAAA;IAAEE,MAAM,GAAAF,UAAA;EAA4B,SAC/BG,cAAcA,CAAA;IAAA,OAAAC,eAAA,CAAAC,KAAA,OAAAC,SAAA;EAAA;EAAA,SAAAF,gBAAA;IAAAA,eAAA,GAAAG,iBAAA,CAA7B,aAAgC;MAC9B,IAAMC,GAAG,GAAG,IAAI3C,OAAO,CAAC,EAAE,EAAE,EAAE,EAAEqB,KAAK,CAAC;MACtC,IAAIO,QAAQ,KAAKgB,SAAS,EAAE;QAC1B,OAAOC,KAAK,CAAC,8BAA8B,CAAC;MAC9C;MACAF,GAAG,CAACL,cAAc,CAACV,QAAQ,CAAC,CAACkB,IAAI,CAAC,UAACC,GAAG,EAAK;QACzC,IAAIA,GAAG,CAACC,OAAO,EAAE;UACfnB,WAAW,CAAC,EAAE,CAAC;UACf,OAAOgB,KAAK,CAAC,+BAA+B,CAAC;QAC/C;QACAA,KAAK,CAAC,8BAA8B,CAAC;MACvC,CAAC,CAAC;IACJ,CAAC;IAAA,OAAAN,eAAA,CAAAC,KAAA,OAAAC,SAAA;EAAA;EAED9C,SAAS,CAAC,YAAM;IACd,IAAMgD,GAAG,GAAG,IAAI3C,OAAO,CAAC,EAAE,EAAE,EAAE,EAAEqB,KAAK,CAAC;IACtCsB,GAAG,CAACM,YAAY,CAAC,CAAC,CAACH,IAAI,CAAC3B,OAAO,CAAC;EAClC,CAAC,EAAE,EAAE,CAAC;EAEN,OACEX,IAAA,CAACX,IAAI;IAACqD,KAAK,EAAE;MAAEC,IAAI,EAAE,CAAC;MAAEC,cAAc,EAAE,QAAQ;MAAEC,UAAU,EAAE;IAAS,CAAE;IAAAC,QAAA,EACvE5C,KAAA,CAACb,IAAI;MAACqD,KAAK,EAAE;QAAEzB,KAAK,EAAEA,KAAK,GAAG,GAAG,GAAG;MAAI,CAAE;MAAA6B,QAAA,GACxC9C,IAAA,CAACJ,IAAI;QACHmD,OAAO,EAAC,eAAe;QACvBL,KAAK,EAAE;UACLM,KAAK,EAAEjC,KAAK,CAACkC,MAAM,CAACC,OAAO;UAC3BC,SAAS,EAAE,QAAQ;UACnBC,YAAY,EAAE;QAChB,CAAE;QAAAN,QAAA,EAEDpC,IAAI,oBAAJA,IAAI,CAAE2C;MAAQ,CACX,CAAC,EACPnD,KAAA,CAACb,IAAI;QACHqD,KAAK,EAAE;UACLC,IAAI,EAAE,CAAC;UACPW,aAAa,EAAE,KAAK;UACpBV,cAAc,EAAE,cAAc;UAC9BQ,YAAY,EAAE;QAChB,CAAE;QAAAN,QAAA,GAEF9C,IAAA,CAACH,SAAS;UACR0D,IAAI,EAAC,MAAM;UACXC,KAAK,EAAEpC,QAAS;UAChBqC,YAAY,EAAEpC,WAAY;UAC1BqC,KAAK,EAAC,YAAY;UAClBhB,KAAK,EAAE;YAAEzB,KAAK,EAAE;UAAM,CAAE;UACxB0C,eAAe,EAAE/B,GAAI;UACrBgC,KAAK,EACH5D,IAAA,CAACH,SAAS,CAACgE,IAAI;YACbC,IAAI,EAAEtC,GAAI;YACVuC,OAAO,EAAE,SAAAA,QAAA,EAAM;cACblC,MAAM,CAAC,CAACD,GAAG,CAAC;cACZJ,GAAG,KAAK,KAAK,GAAGC,MAAM,CAAC,SAAS,CAAC,GAAGA,MAAM,CAAC,KAAK,CAAC;YACnD;UAAE,CACH;QACF,CACF,CAAC,EACFzB,IAAA,CAACL,MAAM;UACL4D,IAAI,EAAC,WAAW;UAChBQ,OAAO,EAAA7B,iBAAA,CAAE;YAAA,aAAkBJ,cAAc,CAAC,CAAC;UAAA,EAAC;UAC5CY,KAAK,EAAE;YAAEzB,KAAK,EAAE,KAAK;YAAE+C,YAAY,EAAE;UAAE,CAAE;UAAAlB,QAAA,EAC1C;QAED,CAAQ,CAAC;MAAA,CACL,CAAC,EACP9C,IAAA,CAACL,MAAM;QACL4D,IAAI,EAAC,MAAM;QACXb,KAAK,EAAE;UAAEuB,eAAe,EAAE;QAAU,CAAE;QACtCF,OAAO,EAAA7B,iBAAA,CAAE,aAAY;UACnB7B,SAAS,CAAC,KAAK,CAAC;UAChBC,QAAQ,CAAC,EAAE,CAAC;UACZ,IAAIf,QAAQ,CAAC2E,EAAE,KAAK,KAAK,EAAE;YACzB,MAAMpE,WAAW,CAACqE,eAAe,CAAC,OAAO,CAAC;UAC5C;QACF,CAAC,CAAC;QAAArB,QAAA,EACH;MAED,CAAQ,CAAC;IAAA,CACL;EAAC,CACH,CAAC;AAEX"},"metadata":{},"sourceType":"module","externalDependencies":[]}