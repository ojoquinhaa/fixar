{"ast":null,"code":"import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";var _excluded=[\"children\",\"style\",\"onPress\",\"onLongPress\",\"onPressIn\",\"onPressOut\",\"to\",\"accessibilityRole\"],_excluded2=[\"icon\",\"label\",\"labelStyle\",\"to\",\"focused\",\"allowFontScaling\",\"activeTintColor\",\"inactiveTintColor\",\"activeBackgroundColor\",\"inactiveBackgroundColor\",\"style\",\"onPress\",\"pressColor\",\"pressOpacity\",\"testID\",\"accessibilityLabel\"];function _extends(){_extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import{PlatformPressable}from'@react-navigation/elements';import{Link,useTheme}from'@react-navigation/native';import Color from'color';import*as React from'react';import Platform from\"react-native-web/dist/exports/Platform\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import Text from\"react-native-web/dist/exports/Text\";import View from\"react-native-web/dist/exports/View\";var LinkPressable=function LinkPressable(_ref){var children=_ref.children,style=_ref.style,_onPress=_ref.onPress,onLongPress=_ref.onLongPress,onPressIn=_ref.onPressIn,onPressOut=_ref.onPressOut,to=_ref.to,accessibilityRole=_ref.accessibilityRole,rest=_objectWithoutProperties(_ref,_excluded);if(Platform.OS==='web'&&to){return React.createElement(Link,_extends({},rest,{to:to,style:[styles.button,style],onPress:function onPress(e){if(!(e.metaKey||e.altKey||e.ctrlKey||e.shiftKey)&&(e.button==null||e.button===0)){e.preventDefault();_onPress===null||_onPress===void 0?void 0:_onPress(e);}},onLongPress:onLongPress!=null?onLongPress:undefined,onPressIn:onPressIn!=null?onPressIn:undefined,onPressOut:onPressOut!=null?onPressOut:undefined}),children);}else{return React.createElement(PlatformPressable,_extends({},rest,{accessibilityRole:accessibilityRole,onPress:_onPress}),React.createElement(View,{style:style},children));}};export default function DrawerItem(props){var _useTheme=useTheme(),colors=_useTheme.colors;var icon=props.icon,label=props.label,labelStyle=props.labelStyle,to=props.to,_props$focused=props.focused,focused=_props$focused===void 0?false:_props$focused,allowFontScaling=props.allowFontScaling,_props$activeTintColo=props.activeTintColor,activeTintColor=_props$activeTintColo===void 0?colors.primary:_props$activeTintColo,_props$inactiveTintCo=props.inactiveTintColor,inactiveTintColor=_props$inactiveTintCo===void 0?Color(colors.text).alpha(0.68).rgb().string():_props$inactiveTintCo,_props$activeBackgrou=props.activeBackgroundColor,activeBackgroundColor=_props$activeBackgrou===void 0?Color(activeTintColor).alpha(0.12).rgb().string():_props$activeBackgrou,_props$inactiveBackgr=props.inactiveBackgroundColor,inactiveBackgroundColor=_props$inactiveBackgr===void 0?'transparent':_props$inactiveBackgr,style=props.style,onPress=props.onPress,pressColor=props.pressColor,pressOpacity=props.pressOpacity,testID=props.testID,accessibilityLabel=props.accessibilityLabel,rest=_objectWithoutProperties(props,_excluded2);var _StyleSheet$flatten=StyleSheet.flatten(style||{}),_StyleSheet$flatten$b=_StyleSheet$flatten.borderRadius,borderRadius=_StyleSheet$flatten$b===void 0?4:_StyleSheet$flatten$b;var color=focused?activeTintColor:inactiveTintColor;var backgroundColor=focused?activeBackgroundColor:inactiveBackgroundColor;var iconNode=icon?icon({size:24,focused:focused,color:color}):null;return React.createElement(View,_extends({collapsable:false},rest,{style:[styles.container,{borderRadius:borderRadius,backgroundColor:backgroundColor},style]}),React.createElement(LinkPressable,{testID:testID,onPress:onPress,style:[styles.wrapper,{borderRadius:borderRadius}],accessibilityLabel:accessibilityLabel,accessibilityRole:\"button\",accessibilityState:{selected:focused},pressColor:pressColor,pressOpacity:pressOpacity,to:to},React.createElement(React.Fragment,null,iconNode,React.createElement(View,{style:[styles.label,{marginLeft:iconNode?32:0,marginVertical:5}]},typeof label==='string'?React.createElement(Text,{numberOfLines:1,allowFontScaling:allowFontScaling,style:[{color:color,fontWeight:'500'},labelStyle]},label):label({color:color,focused:focused})))));}var styles=StyleSheet.create({container:{marginHorizontal:10,marginVertical:4,overflow:'hidden'},wrapper:{flexDirection:'row',alignItems:'center',padding:8},label:{marginRight:32,flex:1},button:{display:'flex'}});","map":{"version":3,"names":["PlatformPressable","Link","useTheme","Color","React","Platform","StyleSheet","Text","View","LinkPressable","_ref","children","style","onPress","onLongPress","onPressIn","onPressOut","to","accessibilityRole","rest","_objectWithoutProperties","_excluded","OS","createElement","_extends","styles","button","e","metaKey","altKey","ctrlKey","shiftKey","preventDefault","undefined","DrawerItem","props","_useTheme","colors","icon","label","labelStyle","_props$focused","focused","allowFontScaling","_props$activeTintColo","activeTintColor","primary","_props$inactiveTintCo","inactiveTintColor","text","alpha","rgb","string","_props$activeBackgrou","activeBackgroundColor","_props$inactiveBackgr","inactiveBackgroundColor","pressColor","pressOpacity","testID","accessibilityLabel","_excluded2","_StyleSheet$flatten","flatten","_StyleSheet$flatten$b","borderRadius","color","backgroundColor","iconNode","size","collapsable","container","wrapper","accessibilityState","selected","Fragment","marginLeft","marginVertical","numberOfLines","fontWeight","create","marginHorizontal","overflow","flexDirection","alignItems","padding","marginRight","flex","display"],"sources":["/home/ojoquinhaa/Documentos/trabalho/inktone/frontend/node_modules/@react-navigation/drawer/src/views/DrawerItem.tsx"],"sourcesContent":["import { PlatformPressable } from '@react-navigation/elements';\nimport { Link, useTheme } from '@react-navigation/native';\nimport Color from 'color';\nimport * as React from 'react';\nimport {\n  Platform,\n  StyleProp,\n  StyleSheet,\n  Text,\n  TextStyle,\n  View,\n  ViewStyle,\n} from 'react-native';\n\ntype Props = {\n  /**\n   * The label text of the item.\n   */\n  label:\n    | string\n    | ((props: { focused: boolean; color: string }) => React.ReactNode);\n  /**\n   * Icon to display for the `DrawerItem`.\n   */\n  icon?: (props: {\n    focused: boolean;\n    size: number;\n    color: string;\n  }) => React.ReactNode;\n  /**\n   * URL to use for the link to the tab.\n   */\n  to?: string;\n  /**\n   * Whether to highlight the drawer item as active.\n   */\n  focused?: boolean;\n  /**\n   * Function to execute on press.\n   */\n  onPress: () => void;\n  /**\n   * Color for the icon and label when the item is active.\n   */\n  activeTintColor?: string;\n  /**\n   * Color for the icon and label when the item is inactive.\n   */\n  inactiveTintColor?: string;\n  /**\n   * Background color for item when its active.\n   */\n  activeBackgroundColor?: string;\n  /**\n   * Background color for item when its inactive.\n   */\n  inactiveBackgroundColor?: string;\n  /**\n   * Color of the touchable effect on press.\n   * Only supported on Android.\n   *\n   * @platform android\n   */\n  pressColor?: string;\n  /**\n   * Opacity of the touchable effect on press.\n   * Only supported on iOS.\n   *\n   * @platform ios\n   */\n  pressOpacity?: number;\n  /**\n   * Style object for the label element.\n   */\n  labelStyle?: StyleProp<TextStyle>;\n  /**\n   * Style object for the wrapper element.\n   */\n  style?: StyleProp<ViewStyle>;\n  /**\n   * Whether label font should scale to respect Text Size accessibility settings.\n   */\n  allowFontScaling?: boolean;\n\n  /**\n   * Accessibility label for drawer item.\n   */\n  accessibilityLabel?: string;\n  /**\n   * ID to locate this drawer item in tests.\n   */\n  testID?: string;\n};\n\nconst LinkPressable = ({\n  children,\n  style,\n  onPress,\n  onLongPress,\n  onPressIn,\n  onPressOut,\n  to,\n  accessibilityRole,\n  ...rest\n}: Omit<React.ComponentProps<typeof PlatformPressable>, 'style'> & {\n  style: StyleProp<ViewStyle>;\n} & {\n  to?: string;\n  children: React.ReactNode;\n  onPress?: () => void;\n}) => {\n  if (Platform.OS === 'web' && to) {\n    // React Native Web doesn't forward `onClick` if we use `TouchableWithoutFeedback`.\n    // We need to use `onClick` to be able to prevent default browser handling of links.\n    return (\n      <Link\n        {...rest}\n        to={to}\n        style={[styles.button, style]}\n        onPress={(e: any) => {\n          if (\n            !(e.metaKey || e.altKey || e.ctrlKey || e.shiftKey) && // ignore clicks with modifier keys\n            (e.button == null || e.button === 0) // ignore everything but left clicks\n          ) {\n            e.preventDefault();\n            onPress?.(e);\n          }\n        }}\n        // types for PressableProps and TextProps are incompatible with each other by `null` so we\n        // can't use {...rest} for these 3 props\n        onLongPress={onLongPress ?? undefined}\n        onPressIn={onPressIn ?? undefined}\n        onPressOut={onPressOut ?? undefined}\n      >\n        {children}\n      </Link>\n    );\n  } else {\n    return (\n      <PlatformPressable\n        {...rest}\n        accessibilityRole={accessibilityRole}\n        onPress={onPress}\n      >\n        <View style={style}>{children}</View>\n      </PlatformPressable>\n    );\n  }\n};\n\n/**\n * A component used to show an action item with an icon and a label in a navigation drawer.\n */\nexport default function DrawerItem(props: Props) {\n  const { colors } = useTheme();\n\n  const {\n    icon,\n    label,\n    labelStyle,\n    to,\n    focused = false,\n    allowFontScaling,\n    activeTintColor = colors.primary,\n    inactiveTintColor = Color(colors.text).alpha(0.68).rgb().string(),\n    activeBackgroundColor = Color(activeTintColor).alpha(0.12).rgb().string(),\n    inactiveBackgroundColor = 'transparent',\n    style,\n    onPress,\n    pressColor,\n    pressOpacity,\n    testID,\n    accessibilityLabel,\n    ...rest\n  } = props;\n\n  const { borderRadius = 4 } = StyleSheet.flatten(style || {});\n  const color = focused ? activeTintColor : inactiveTintColor;\n  const backgroundColor = focused\n    ? activeBackgroundColor\n    : inactiveBackgroundColor;\n\n  const iconNode = icon ? icon({ size: 24, focused, color }) : null;\n\n  return (\n    <View\n      collapsable={false}\n      {...rest}\n      style={[styles.container, { borderRadius, backgroundColor }, style]}\n    >\n      <LinkPressable\n        testID={testID}\n        onPress={onPress}\n        style={[styles.wrapper, { borderRadius }]}\n        accessibilityLabel={accessibilityLabel}\n        accessibilityRole=\"button\"\n        accessibilityState={{ selected: focused }}\n        pressColor={pressColor}\n        pressOpacity={pressOpacity}\n        to={to}\n      >\n        <React.Fragment>\n          {iconNode}\n          <View\n            style={[\n              styles.label,\n              { marginLeft: iconNode ? 32 : 0, marginVertical: 5 },\n            ]}\n          >\n            {typeof label === 'string' ? (\n              <Text\n                numberOfLines={1}\n                allowFontScaling={allowFontScaling}\n                style={[\n                  {\n                    color,\n                    fontWeight: '500',\n                  },\n                  labelStyle,\n                ]}\n              >\n                {label}\n              </Text>\n            ) : (\n              label({ color, focused })\n            )}\n          </View>\n        </React.Fragment>\n      </LinkPressable>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    marginHorizontal: 10,\n    marginVertical: 4,\n    overflow: 'hidden',\n  },\n  wrapper: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    padding: 8,\n  },\n  label: {\n    marginRight: 32,\n    flex: 1,\n  },\n  button: {\n    display: 'flex',\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}