{"ast":null,"code":"import _asyncToGenerator from\"@babel/runtime/helpers/asyncToGenerator\";import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import{useEffect,useState}from\"react\";import View from\"react-native-web/dist/exports/View\";import Text from\"react-native-web/dist/exports/Text\";import useWindowDimensions from\"react-native-web/dist/exports/useWindowDimensions\";import Platform from\"react-native-web/dist/exports/Platform\";import UserAPI from\"../../API/User\";import{useRoute,useTheme}from\"@react-navigation/native\";import Button from\"react-native-paper/lib/module/components/Button/Button\";import SecuryStore from\"expo-secure-store\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function Accont(){var _useState=useState(),_useState2=_slicedToArray(_useState,2),user=_useState2[0],setUser=_useState2[1];var route=useRoute();var _route$params=route.params,token=_route$params.token,setLogged=_route$params.setLogged,setToken=_route$params.setToken;var theme=useTheme();var _useWindowDimensions=useWindowDimensions(),width=_useWindowDimensions.width;useEffect(function(){var api=new UserAPI(\"\",\"\",token);api.confirmLogin().then(setUser);});return _jsx(View,{style:{flex:1,justifyContent:\"center\",alignItems:\"center\"},children:_jsxs(View,{style:{width:width*0.5+200,backgroundColor:theme.colors.card},children:[_jsx(Text,{style:{color:theme.colors.primary},children:user==null?void 0:user.username}),_jsx(Button,{mode:\"text\",style:{backgroundColor:theme.colors.notification},onPress:_asyncToGenerator(function*(){setLogged(false);setToken(\"\");if(Platform.OS!==\"web\"){yield SecuryStore.deleteItemAsync(\"token\");}}),children:\"Sair\"})]})});}","map":{"version":3,"names":["useEffect","useState","View","Text","useWindowDimensions","Platform","UserAPI","useRoute","useTheme","Button","SecuryStore","jsx","_jsx","jsxs","_jsxs","Accont","_useState","_useState2","_slicedToArray","user","setUser","route","_route$params","params","token","setLogged","setToken","theme","_useWindowDimensions","width","api","confirmLogin","then","style","flex","justifyContent","alignItems","children","backgroundColor","colors","card","color","primary","username","mode","notification","onPress","_asyncToGenerator","OS","deleteItemAsync"],"sources":["/home/ojoquinhaa/Documentos/trabalho/inktone/frontend/components/Screen/Accont.tsx"],"sourcesContent":["import { Dispatch, SetStateAction, useEffect, useState } from \"react\";\nimport { View, Text, useWindowDimensions, Platform } from \"react-native\";\nimport UserAPI, { User } from \"../../API/User\";\nimport { RouteProp, useRoute, useTheme } from \"@react-navigation/native\";\nimport { Button } from \"react-native-paper\";\nimport Book from \"../../API/Book\";\nimport SecuryStore from \"expo-secure-store\";\n\nexport default function Accont() {\n  const [user, setUser] = useState<User>();\n\n  const route = useRoute<\n    RouteProp<{\n      Accont: {\n        token: string;\n        book: Book;\n        setToken: Dispatch<SetStateAction<string>>;\n        setLogged: Dispatch<SetStateAction<boolean>>;\n      };\n    }>\n  >();\n\n  const { token, setLogged, setToken } = route.params;\n\n  const theme = useTheme();\n  const { width } = useWindowDimensions();\n\n  useEffect(() => {\n    const api = new UserAPI(\"\", \"\", token);\n    api.confirmLogin().then(setUser);\n  });\n\n  return (\n    <View style={{ flex: 1, justifyContent: \"center\", alignItems: \"center\" }}>\n      <View\n        style={{ width: width * 0.5 + 200, backgroundColor: theme.colors.card }}\n      >\n        <Text style={{ color: theme.colors.primary }}>{user?.username}</Text>\n        <Button\n          mode=\"text\"\n          style={{ backgroundColor: theme.colors.notification }}\n          onPress={async () => {\n            setLogged(false);\n            setToken(\"\");\n            if (Platform.OS !== \"web\") {\n              await SecuryStore.deleteItemAsync(\"token\");\n            }\n          }}\n        >\n          Sair\n        </Button>\n      </View>\n    </View>\n  );\n}\n"],"mappings":"wIAAA,OAAmCA,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAAC,OAAAC,IAAA,iDAAAC,IAAA,iDAAAC,mBAAA,gEAAAC,QAAA,8CAEtE,MAAO,CAAAC,OAAO,sBACd,OAAoBC,QAAQ,CAAEC,QAAQ,KAAQ,0BAA0B,CAAC,OAAAC,MAAA,8DAGzE,MAAO,CAAAC,WAAW,KAAM,mBAAmB,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAE5C,cAAe,SAAS,CAAAC,MAAMA,CAAA,CAAG,CAC/B,IAAAC,SAAA,CAAwBf,QAAQ,CAAO,CAAC,CAAAgB,UAAA,CAAAC,cAAA,CAAAF,SAAA,IAAjCG,IAAI,CAAAF,UAAA,IAAEG,OAAO,CAAAH,UAAA,IAEpB,GAAM,CAAAI,KAAK,CAAGd,QAAQ,CASpB,CAAC,CAEH,IAAAe,aAAA,CAAuCD,KAAK,CAACE,MAAM,CAA3CC,KAAK,CAAAF,aAAA,CAALE,KAAK,CAAEC,SAAS,CAAAH,aAAA,CAATG,SAAS,CAAEC,QAAQ,CAAAJ,aAAA,CAARI,QAAQ,CAElC,GAAM,CAAAC,KAAK,CAAGnB,QAAQ,CAAC,CAAC,CACxB,IAAAoB,oBAAA,CAAkBxB,mBAAmB,CAAC,CAAC,CAA/ByB,KAAK,CAAAD,oBAAA,CAALC,KAAK,CAEb7B,SAAS,CAAC,UAAM,CACd,GAAM,CAAA8B,GAAG,CAAG,GAAI,CAAAxB,OAAO,CAAC,EAAE,CAAE,EAAE,CAAEkB,KAAK,CAAC,CACtCM,GAAG,CAACC,YAAY,CAAC,CAAC,CAACC,IAAI,CAACZ,OAAO,CAAC,CAClC,CAAC,CAAC,CAEF,MACE,CAAAR,IAAA,CAACV,IAAI,EAAC+B,KAAK,CAAE,CAAEC,IAAI,CAAE,CAAC,CAAEC,cAAc,CAAE,QAAQ,CAAEC,UAAU,CAAE,QAAS,CAAE,CAAAC,QAAA,CACvEvB,KAAA,CAACZ,IAAI,EACH+B,KAAK,CAAE,CAAEJ,KAAK,CAAEA,KAAK,CAAG,GAAG,CAAG,GAAG,CAAES,eAAe,CAAEX,KAAK,CAACY,MAAM,CAACC,IAAK,CAAE,CAAAH,QAAA,EAExEzB,IAAA,CAACT,IAAI,EAAC8B,KAAK,CAAE,CAAEQ,KAAK,CAAEd,KAAK,CAACY,MAAM,CAACG,OAAQ,CAAE,CAAAL,QAAA,CAAElB,IAAI,cAAJA,IAAI,CAAEwB,QAAQ,CAAO,CAAC,CACrE/B,IAAA,CAACH,MAAM,EACLmC,IAAI,CAAC,MAAM,CACXX,KAAK,CAAE,CAAEK,eAAe,CAAEX,KAAK,CAACY,MAAM,CAACM,YAAa,CAAE,CACtDC,OAAO,CAAAC,iBAAA,CAAE,WAAY,CACnBtB,SAAS,CAAC,KAAK,CAAC,CAChBC,QAAQ,CAAC,EAAE,CAAC,CACZ,GAAIrB,QAAQ,CAAC2C,EAAE,GAAK,KAAK,CAAE,CACzB,KAAM,CAAAtC,WAAW,CAACuC,eAAe,CAAC,OAAO,CAAC,CAC5C,CACF,CAAC,CAAC,CAAAZ,QAAA,CACH,MAED,CAAQ,CAAC,EACL,CAAC,CACH,CAAC,CAEX"},"metadata":{},"sourceType":"module","externalDependencies":[]}