{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}import{CommonActions,DrawerActions,useLinkBuilder}from'@react-navigation/native';import*as React from'react';import DrawerItem from\"./DrawerItem\";export default function DrawerItemList(_ref){var state=_ref.state,navigation=_ref.navigation,descriptors=_ref.descriptors;var buildLink=useLinkBuilder();var focusedRoute=state.routes[state.index];var focusedDescriptor=descriptors[focusedRoute.key];var focusedOptions=focusedDescriptor.options;var drawerActiveTintColor=focusedOptions.drawerActiveTintColor,drawerInactiveTintColor=focusedOptions.drawerInactiveTintColor,drawerActiveBackgroundColor=focusedOptions.drawerActiveBackgroundColor,drawerInactiveBackgroundColor=focusedOptions.drawerInactiveBackgroundColor;return state.routes.map(function(route,i){var focused=i===state.index;var onPress=function onPress(){var event=navigation.emit({type:'drawerItemPress',target:route.key,canPreventDefault:true});if(!event.defaultPrevented){navigation.dispatch(_objectSpread(_objectSpread({},focused?DrawerActions.closeDrawer():CommonActions.navigate({name:route.name,merge:true})),{},{target:state.key}));}};var _descriptors$route$ke=descriptors[route.key].options,title=_descriptors$route$ke.title,drawerLabel=_descriptors$route$ke.drawerLabel,drawerIcon=_descriptors$route$ke.drawerIcon,drawerLabelStyle=_descriptors$route$ke.drawerLabelStyle,drawerItemStyle=_descriptors$route$ke.drawerItemStyle,drawerAllowFontScaling=_descriptors$route$ke.drawerAllowFontScaling;return React.createElement(DrawerItem,{key:route.key,label:drawerLabel!==undefined?drawerLabel:title!==undefined?title:route.name,icon:drawerIcon,focused:focused,activeTintColor:drawerActiveTintColor,inactiveTintColor:drawerInactiveTintColor,activeBackgroundColor:drawerActiveBackgroundColor,inactiveBackgroundColor:drawerInactiveBackgroundColor,allowFontScaling:drawerAllowFontScaling,labelStyle:drawerLabelStyle,style:drawerItemStyle,to:buildLink(route.name,route.params),onPress:onPress});});}","map":{"version":3,"names":["CommonActions","DrawerActions","useLinkBuilder","React","DrawerItem","DrawerItemList","_ref","state","navigation","descriptors","buildLink","focusedRoute","routes","index","focusedDescriptor","key","focusedOptions","options","drawerActiveTintColor","drawerInactiveTintColor","drawerActiveBackgroundColor","drawerInactiveBackgroundColor","map","route","i","focused","onPress","event","emit","type","target","canPreventDefault","defaultPrevented","dispatch","_objectSpread","closeDrawer","navigate","name","merge","_descriptors$route$ke","title","drawerLabel","drawerIcon","drawerLabelStyle","drawerItemStyle","drawerAllowFontScaling","createElement","label","undefined","icon","activeTintColor","inactiveTintColor","activeBackgroundColor","inactiveBackgroundColor","allowFontScaling","labelStyle","style","to","params"],"sources":["/home/ojoquinhaa/Documentos/trabalho/inktone/frontend/node_modules/@react-navigation/drawer/src/views/DrawerItemList.tsx"],"sourcesContent":["import {\n  CommonActions,\n  DrawerActions,\n  DrawerNavigationState,\n  ParamListBase,\n  useLinkBuilder,\n} from '@react-navigation/native';\nimport * as React from 'react';\n\nimport type { DrawerDescriptorMap, DrawerNavigationHelpers } from '../types';\nimport DrawerItem from './DrawerItem';\n\ntype Props = {\n  state: DrawerNavigationState<ParamListBase>;\n  navigation: DrawerNavigationHelpers;\n  descriptors: DrawerDescriptorMap;\n};\n\n/**\n * Component that renders the navigation list in the drawer.\n */\nexport default function DrawerItemList({\n  state,\n  navigation,\n  descriptors,\n}: Props) {\n  const buildLink = useLinkBuilder();\n\n  const focusedRoute = state.routes[state.index];\n  const focusedDescriptor = descriptors[focusedRoute.key];\n  const focusedOptions = focusedDescriptor.options;\n\n  const {\n    drawerActiveTintColor,\n    drawerInactiveTintColor,\n    drawerActiveBackgroundColor,\n    drawerInactiveBackgroundColor,\n  } = focusedOptions;\n\n  return state.routes.map((route, i) => {\n    const focused = i === state.index;\n\n    const onPress = () => {\n      const event = navigation.emit({\n        type: 'drawerItemPress',\n        target: route.key,\n        canPreventDefault: true,\n      });\n\n      if (!event.defaultPrevented) {\n        navigation.dispatch({\n          ...(focused\n            ? DrawerActions.closeDrawer()\n            : CommonActions.navigate({ name: route.name, merge: true })),\n          target: state.key,\n        });\n      }\n    };\n\n    const {\n      title,\n      drawerLabel,\n      drawerIcon,\n      drawerLabelStyle,\n      drawerItemStyle,\n      drawerAllowFontScaling,\n    } = descriptors[route.key].options;\n\n    return (\n      <DrawerItem\n        key={route.key}\n        label={\n          drawerLabel !== undefined\n            ? drawerLabel\n            : title !== undefined\n            ? title\n            : route.name\n        }\n        icon={drawerIcon}\n        focused={focused}\n        activeTintColor={drawerActiveTintColor}\n        inactiveTintColor={drawerInactiveTintColor}\n        activeBackgroundColor={drawerActiveBackgroundColor}\n        inactiveBackgroundColor={drawerInactiveBackgroundColor}\n        allowFontScaling={drawerAllowFontScaling}\n        labelStyle={drawerLabelStyle}\n        style={drawerItemStyle}\n        to={buildLink(route.name, route.params)}\n        onPress={onPress}\n      />\n    );\n  }) as React.ReactNode as React.ReactElement;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}