{"ast":null,"code":"import*as React from'react';import DrawerStatusContext from\"./DrawerStatusContext\";export default function useDrawerStatus(){var drawerStatus=React.useContext(DrawerStatusContext);if(drawerStatus===undefined){throw new Error(\"Couldn't find a drawer. Is your component inside a drawer navigator?\");}return drawerStatus;}","map":{"version":3,"names":["React","DrawerStatusContext","useDrawerStatus","drawerStatus","useContext","undefined","Error"],"sources":["/home/ojoquinhaa/Documentos/trabalho/inktone/frontend/node_modules/@react-navigation/drawer/src/utils/useDrawerStatus.tsx"],"sourcesContent":["import type { DrawerStatus } from '@react-navigation/native';\nimport * as React from 'react';\n\nimport DrawerStatusContext from './DrawerStatusContext';\n\n/**\n * Hook to detect if the drawer's status in a parent navigator.\n * Returns 'open' if the drawer is open, 'closed' if the drawer is closed.\n */\nexport default function useDrawerStatus(): DrawerStatus {\n  const drawerStatus = React.useContext(DrawerStatusContext);\n\n  if (drawerStatus === undefined) {\n    throw new Error(\n      \"Couldn't find a drawer. Is your component inside a drawer navigator?\"\n    );\n  }\n\n  return drawerStatus;\n}\n"],"mappings":"AACA,MAAO,GAAK,CAAAA,KAAK,KAAM,OAAO,CAE9B,MAAO,CAAAC,mBAAmB,6BAM1B,cAAe,SAAS,CAAAC,eAAeA,CAAA,CAAiB,CACtD,GAAM,CAAAC,YAAY,CAAGH,KAAK,CAACI,UAAU,CAACH,mBAAmB,CAAC,CAE1D,GAAIE,YAAY,GAAKE,SAAS,CAAE,CAC9B,KAAM,IAAI,CAAAC,KAAK,CACb,sEAAsE,CACvE,CACH,CAEA,MAAO,CAAAH,YAAY,CACrB"},"metadata":{},"sourceType":"module","externalDependencies":[]}