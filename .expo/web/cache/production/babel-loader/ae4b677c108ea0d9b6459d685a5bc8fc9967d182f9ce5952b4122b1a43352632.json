{"ast":null,"code":"export var Bezier=function(){var _f=function _f(mX1,mY1,mX2,mY2){var NEWTON_ITERATIONS=4;var NEWTON_MIN_SLOPE=0.001;var SUBDIVISION_PRECISION=0.0000001;var SUBDIVISION_MAX_ITERATIONS=10;var kSplineTableSize=11;var kSampleStepSize=1.0/(kSplineTableSize-1.0);var A=function(){var _f=function _f(aA1,aA2){return 1.0-3.0*aA2+3.0*aA1;};_f._closure={};_f.asString=\"function A(aA1,aA2){return 1.0-3.0*aA2+3.0*aA1;}\";_f.__workletHash=7696928702327;_f.__location=\"/home/ojoquinhaa/Documentos/trabalho/inktone/frontend/node_modules/react-native-reanimated/lib/reanimated2/Bezier.js (15:4)\";return _f;}();var B=function(){var _f=function _f(aA1,aA2){return 3.0*aA2-6.0*aA1;};_f._closure={};_f.asString=\"function B(aA1,aA2){return 3.0*aA2-6.0*aA1;}\";_f.__workletHash=3169786778773;_f.__location=\"/home/ojoquinhaa/Documentos/trabalho/inktone/frontend/node_modules/react-native-reanimated/lib/reanimated2/Bezier.js (19:4)\";return _f;}();var C=function(){var _f=function _f(aA1){return 3.0*aA1;};_f._closure={};_f.asString=\"function C(aA1){return 3.0*aA1;}\";_f.__workletHash=6399610653367;_f.__location=\"/home/ojoquinhaa/Documentos/trabalho/inktone/frontend/node_modules/react-native-reanimated/lib/reanimated2/Bezier.js (23:4)\";return _f;}();var calcBezier=function(){var _f=function _f(aT,aA1,aA2){return((A(aA1,aA2)*aT+B(aA1,aA2))*aT+C(aA1))*aT;};_f._closure={A:A,B:B,C:C};_f.asString=\"function calcBezier(aT,aA1,aA2){const{A,B,C}=jsThis._closure;{return((A(aA1,aA2)*aT+B(aA1,aA2))*aT+C(aA1))*aT;}}\";_f.__workletHash=3153137150968;_f.__location=\"/home/ojoquinhaa/Documentos/trabalho/inktone/frontend/node_modules/react-native-reanimated/lib/reanimated2/Bezier.js (28:4)\";return _f;}();var getSlope=function(){var _f=function _f(aT,aA1,aA2){return 3.0*A(aA1,aA2)*aT*aT+2.0*B(aA1,aA2)*aT+C(aA1);};_f._closure={A:A,B:B,C:C};_f.asString=\"function getSlope(aT,aA1,aA2){const{A,B,C}=jsThis._closure;{return 3.0*A(aA1,aA2)*aT*aT+2.0*B(aA1,aA2)*aT+C(aA1);}}\";_f.__workletHash=17050227570308;_f.__location=\"/home/ojoquinhaa/Documentos/trabalho/inktone/frontend/node_modules/react-native-reanimated/lib/reanimated2/Bezier.js (33:4)\";return _f;}();var binarySubdivide=function(){var _f=function _f(aX,aA,aB,mX1,mX2){var currentX;var currentT;var i=0;do{currentT=aA+(aB-aA)/2.0;currentX=calcBezier(currentT,mX1,mX2)-aX;if(currentX>0.0){aB=currentT;}else{aA=currentT;}}while(Math.abs(currentX)>SUBDIVISION_PRECISION&&++i<SUBDIVISION_MAX_ITERATIONS);return currentT;};_f._closure={SUBDIVISION_PRECISION:SUBDIVISION_PRECISION,SUBDIVISION_MAX_ITERATIONS:SUBDIVISION_MAX_ITERATIONS,calcBezier:calcBezier};_f.asString=\"function binarySubdivide(aX,aA,aB,mX1,mX2){const{SUBDIVISION_PRECISION,SUBDIVISION_MAX_ITERATIONS,calcBezier}=jsThis._closure;{let currentX;let currentT;let i=0;do{currentT=aA+(aB-aA)/2.0;currentX=calcBezier(currentT,mX1,mX2)-aX;if(currentX>0.0){aB=currentT;}else{aA=currentT;}}while(Math.abs(currentX)>SUBDIVISION_PRECISION&&++i<SUBDIVISION_MAX_ITERATIONS);return currentT;}}\";_f.__workletHash=7302972877011;_f.__location=\"/home/ojoquinhaa/Documentos/trabalho/inktone/frontend/node_modules/react-native-reanimated/lib/reanimated2/Bezier.js (37:4)\";return _f;}();var newtonRaphsonIterate=function(){var _f=function _f(aX,aGuessT,mX1,mX2){for(var i=0;i<NEWTON_ITERATIONS;++i){var currentSlope=getSlope(aGuessT,mX1,mX2);if(currentSlope===0.0){return aGuessT;}var currentX=calcBezier(aGuessT,mX1,mX2)-aX;aGuessT-=currentX/currentSlope;}return aGuessT;};_f._closure={NEWTON_ITERATIONS:NEWTON_ITERATIONS,getSlope:getSlope,calcBezier:calcBezier};_f.asString=\"function newtonRaphsonIterate(aX,aGuessT,mX1,mX2){const{NEWTON_ITERATIONS,getSlope,calcBezier}=jsThis._closure;{for(let i=0;i<NEWTON_ITERATIONS;++i){const currentSlope=getSlope(aGuessT,mX1,mX2);if(currentSlope===0.0){return aGuessT;}const currentX=calcBezier(aGuessT,mX1,mX2)-aX;aGuessT-=currentX/currentSlope;}return aGuessT;}}\";_f.__workletHash=10378506933532;_f.__location=\"/home/ojoquinhaa/Documentos/trabalho/inktone/frontend/node_modules/react-native-reanimated/lib/reanimated2/Bezier.js (55:4)\";return _f;}();var LinearEasing=function(){var _f=function _f(x){return x;};_f._closure={};_f.asString=\"function LinearEasing(x){return x;}\";_f.__workletHash=3962143445177;_f.__location=\"/home/ojoquinhaa/Documentos/trabalho/inktone/frontend/node_modules/react-native-reanimated/lib/reanimated2/Bezier.js (67:4)\";return _f;}();if(!(mX1>=0&&mX1<=1&&mX2>=0&&mX2<=1)){throw new Error('bezier x values must be in [0, 1] range');}if(mX1===mY1&&mX2===mY2){return LinearEasing;}var sampleValues=new Array(kSplineTableSize);for(var i=0;i<kSplineTableSize;++i){sampleValues[i]=calcBezier(i*kSampleStepSize,mX1,mX2);}var getTForX=function(){var _f=function _f(aX){var intervalStart=0.0;var currentSample=1;var lastSample=kSplineTableSize-1;for(;currentSample!==lastSample&&sampleValues[currentSample]<=aX;++currentSample){intervalStart+=kSampleStepSize;}--currentSample;var dist=(aX-sampleValues[currentSample])/(sampleValues[currentSample+1]-sampleValues[currentSample]);var guessForT=intervalStart+dist*kSampleStepSize;var initialSlope=getSlope(guessForT,mX1,mX2);if(initialSlope>=NEWTON_MIN_SLOPE){return newtonRaphsonIterate(aX,guessForT,mX1,mX2);}else if(initialSlope===0.0){return guessForT;}else{return binarySubdivide(aX,intervalStart,intervalStart+kSampleStepSize,mX1,mX2);}};_f._closure={kSplineTableSize:kSplineTableSize,sampleValues:sampleValues,kSampleStepSize:kSampleStepSize,getSlope:getSlope,mX1:mX1,mX2:mX2,NEWTON_MIN_SLOPE:NEWTON_MIN_SLOPE,newtonRaphsonIterate:newtonRaphsonIterate,binarySubdivide:binarySubdivide};_f.asString=\"function getTForX(aX){const{kSplineTableSize,sampleValues,kSampleStepSize,getSlope,mX1,mX2,NEWTON_MIN_SLOPE,newtonRaphsonIterate,binarySubdivide}=jsThis._closure;{let intervalStart=0.0;let currentSample=1;const lastSample=kSplineTableSize-1;for(;currentSample!==lastSample&&sampleValues[currentSample]<=aX;++currentSample){intervalStart+=kSampleStepSize;}--currentSample;const dist=(aX-sampleValues[currentSample])/(sampleValues[currentSample+1]-sampleValues[currentSample]);const guessForT=intervalStart+dist*kSampleStepSize;const initialSlope=getSlope(guessForT,mX1,mX2);if(initialSlope>=NEWTON_MIN_SLOPE){return newtonRaphsonIterate(aX,guessForT,mX1,mX2);}else if(initialSlope===0.0){return guessForT;}else{return binarySubdivide(aX,intervalStart,intervalStart+kSampleStepSize,mX1,mX2);}}}\";_f.__workletHash=3164695138880;_f.__location=\"/home/ojoquinhaa/Documentos/trabalho/inktone/frontend/node_modules/react-native-reanimated/lib/reanimated2/Bezier.js (88:4)\";return _f;}();return function(){var _f=function _f(x){if(mX1===mY1&&mX2===mY2){return x;}if(x===0){return 0;}if(x===1){return 1;}return calcBezier(getTForX(x),mY1,mY2);};_f._closure={mX1:mX1,mY1:mY1,mX2:mX2,mY2:mY2,calcBezier:calcBezier,getTForX:getTForX};_f.asString=\"function BezierEasing(x){const{mX1,mY1,mX2,mY2,calcBezier,getTForX}=jsThis._closure;{if(mX1===mY1&&mX2===mY2){return x;}if(x===0){return 0;}if(x===1){return 1;}return calcBezier(getTForX(x),mY1,mY2);}}\";_f.__workletHash=8676971518933;_f.__location=\"/home/ojoquinhaa/Documentos/trabalho/inktone/frontend/node_modules/react-native-reanimated/lib/reanimated2/Bezier.js (112:11)\";return _f;}();};_f._closure={};_f.asString=\"function Bezier(mX1,mY1,mX2,mY2){const NEWTON_ITERATIONS=4;const NEWTON_MIN_SLOPE=0.001;const SUBDIVISION_PRECISION=0.0000001;const SUBDIVISION_MAX_ITERATIONS=10;const kSplineTableSize=11;const kSampleStepSize=1.0/(kSplineTableSize-1.0);function A(aA1,aA2){'worklet';return 1.0-3.0*aA2+3.0*aA1;}function B(aA1,aA2){'worklet';return 3.0*aA2-6.0*aA1;}function C(aA1){'worklet';return 3.0*aA1;}function calcBezier(aT,aA1,aA2){'worklet';return((A(aA1,aA2)*aT+B(aA1,aA2))*aT+C(aA1))*aT;}function getSlope(aT,aA1,aA2){'worklet';return 3.0*A(aA1,aA2)*aT*aT+2.0*B(aA1,aA2)*aT+C(aA1);}function binarySubdivide(aX,aA,aB,mX1,mX2){'worklet';let currentX;let currentT;let i=0;do{currentT=aA+(aB-aA)/2.0;currentX=calcBezier(currentT,mX1,mX2)-aX;if(currentX>0.0){aB=currentT;}else{aA=currentT;}}while(Math.abs(currentX)>SUBDIVISION_PRECISION&&++i<SUBDIVISION_MAX_ITERATIONS);return currentT;}function newtonRaphsonIterate(aX,aGuessT,mX1,mX2){'worklet';for(let i=0;i<NEWTON_ITERATIONS;++i){const currentSlope=getSlope(aGuessT,mX1,mX2);if(currentSlope===0.0){return aGuessT;}const currentX=calcBezier(aGuessT,mX1,mX2)-aX;aGuessT-=currentX/currentSlope;}return aGuessT;}function LinearEasing(x){'worklet';return x;}if(!(mX1>=0&&mX1<=1&&mX2>=0&&mX2<=1)){throw new Error('bezier x values must be in [0, 1] range');}if(mX1===mY1&&mX2===mY2){return LinearEasing;}const sampleValues=new Array(kSplineTableSize);for(let i=0;i<kSplineTableSize;++i){sampleValues[i]=calcBezier(i*kSampleStepSize,mX1,mX2);}function getTForX(aX){'worklet';let intervalStart=0.0;let currentSample=1;const lastSample=kSplineTableSize-1;for(;currentSample!==lastSample&&sampleValues[currentSample]<=aX;++currentSample){intervalStart+=kSampleStepSize;}--currentSample;const dist=(aX-sampleValues[currentSample])/(sampleValues[currentSample+1]-sampleValues[currentSample]);const guessForT=intervalStart+dist*kSampleStepSize;const initialSlope=getSlope(guessForT,mX1,mX2);if(initialSlope>=NEWTON_MIN_SLOPE){return newtonRaphsonIterate(aX,guessForT,mX1,mX2);}else if(initialSlope===0.0){return guessForT;}else{return binarySubdivide(aX,intervalStart,intervalStart+kSampleStepSize,mX1,mX2);}}return function BezierEasing(x){'worklet';if(mX1===mY1&&mX2===mY2){return x;}if(x===0){return 0;}if(x===1){return 1;}return calcBezier(getTForX(x),mY1,mY2);};}\";_f.__workletHash=7389715548968;_f.__location=\"/home/ojoquinhaa/Documentos/trabalho/inktone/frontend/node_modules/react-native-reanimated/lib/reanimated2/Bezier.js (7:7)\";return _f;}();","map":{"version":3,"names":["Bezier","_f","mX1","mY1","mX2","mY2","NEWTON_ITERATIONS","NEWTON_MIN_SLOPE","SUBDIVISION_PRECISION","SUBDIVISION_MAX_ITERATIONS","kSplineTableSize","kSampleStepSize","A","aA1","aA2","_closure","asString","__workletHash","__location","B","C","calcBezier","aT","getSlope","binarySubdivide","aX","aA","aB","currentX","currentT","i","Math","abs","newtonRaphsonIterate","aGuessT","currentSlope","LinearEasing","x","Error","sampleValues","Array","getTForX","intervalStart","currentSample","lastSample","dist","guessForT","initialSlope"],"sources":["/home/ojoquinhaa/Documentos/trabalho/inktone/frontend/node_modules/react-native-reanimated/lib/reanimated2/Bezier.js"],"sourcesContent":["/**\n * https://github.com/gre/bezier-easing\n * BezierEasing - use bezier curve for transition easing function\n * by Gaëtan Renaudeau 2014 - 2015 – MIT License\n */\n// These values are established by empiricism with tests (tradeoff: performance VS precision)\nexport function Bezier(mX1, mY1, mX2, mY2) {\n    'worklet';\n    const NEWTON_ITERATIONS = 4;\n    const NEWTON_MIN_SLOPE = 0.001;\n    const SUBDIVISION_PRECISION = 0.0000001;\n    const SUBDIVISION_MAX_ITERATIONS = 10;\n    const kSplineTableSize = 11;\n    const kSampleStepSize = 1.0 / (kSplineTableSize - 1.0);\n    function A(aA1, aA2) {\n        'worklet';\n        return 1.0 - 3.0 * aA2 + 3.0 * aA1;\n    }\n    function B(aA1, aA2) {\n        'worklet';\n        return 3.0 * aA2 - 6.0 * aA1;\n    }\n    function C(aA1) {\n        'worklet';\n        return 3.0 * aA1;\n    }\n    // Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\n    function calcBezier(aT, aA1, aA2) {\n        'worklet';\n        return ((A(aA1, aA2) * aT + B(aA1, aA2)) * aT + C(aA1)) * aT;\n    }\n    // Returns dx/dt given t, x1, and x2, or dy/dt given t, y1, and y2.\n    function getSlope(aT, aA1, aA2) {\n        'worklet';\n        return 3.0 * A(aA1, aA2) * aT * aT + 2.0 * B(aA1, aA2) * aT + C(aA1);\n    }\n    function binarySubdivide(aX, aA, aB, mX1, mX2) {\n        'worklet';\n        let currentX;\n        let currentT;\n        let i = 0;\n        do {\n            currentT = aA + (aB - aA) / 2.0;\n            currentX = calcBezier(currentT, mX1, mX2) - aX;\n            if (currentX > 0.0) {\n                aB = currentT;\n            }\n            else {\n                aA = currentT;\n            }\n        } while (Math.abs(currentX) > SUBDIVISION_PRECISION &&\n            ++i < SUBDIVISION_MAX_ITERATIONS);\n        return currentT;\n    }\n    function newtonRaphsonIterate(aX, aGuessT, mX1, mX2) {\n        'worklet';\n        for (let i = 0; i < NEWTON_ITERATIONS; ++i) {\n            const currentSlope = getSlope(aGuessT, mX1, mX2);\n            if (currentSlope === 0.0) {\n                return aGuessT;\n            }\n            const currentX = calcBezier(aGuessT, mX1, mX2) - aX;\n            aGuessT -= currentX / currentSlope;\n        }\n        return aGuessT;\n    }\n    function LinearEasing(x) {\n        'worklet';\n        return x;\n    }\n    if (!(mX1 >= 0 && mX1 <= 1 && mX2 >= 0 && mX2 <= 1)) {\n        throw new Error('bezier x values must be in [0, 1] range');\n    }\n    if (mX1 === mY1 && mX2 === mY2) {\n        return LinearEasing;\n    }\n    // FIXME: Float32Array is not available in Hermes right now\n    //\n    // var float32ArraySupported = typeof Float32Array === 'function';\n    // const sampleValues = float32ArraySupported\n    // ? new Float32Array(kSplineTableSize)\n    // : new Array(kSplineTableSize);\n    // Precompute samples table\n    const sampleValues = new Array(kSplineTableSize);\n    for (let i = 0; i < kSplineTableSize; ++i) {\n        sampleValues[i] = calcBezier(i * kSampleStepSize, mX1, mX2);\n    }\n    function getTForX(aX) {\n        'worklet';\n        let intervalStart = 0.0;\n        let currentSample = 1;\n        const lastSample = kSplineTableSize - 1;\n        for (; currentSample !== lastSample && sampleValues[currentSample] <= aX; ++currentSample) {\n            intervalStart += kSampleStepSize;\n        }\n        --currentSample;\n        // Interpolate to provide an initial guess for t\n        const dist = (aX - sampleValues[currentSample]) /\n            (sampleValues[currentSample + 1] - sampleValues[currentSample]);\n        const guessForT = intervalStart + dist * kSampleStepSize;\n        const initialSlope = getSlope(guessForT, mX1, mX2);\n        if (initialSlope >= NEWTON_MIN_SLOPE) {\n            return newtonRaphsonIterate(aX, guessForT, mX1, mX2);\n        }\n        else if (initialSlope === 0.0) {\n            return guessForT;\n        }\n        else {\n            return binarySubdivide(aX, intervalStart, intervalStart + kSampleStepSize, mX1, mX2);\n        }\n    }\n    return function BezierEasing(x) {\n        'worklet';\n        if (mX1 === mY1 && mX2 === mY2) {\n            return x; // linear\n        }\n        // Because JavaScript number are imprecise, we should guarantee the extremes are right.\n        if (x === 0) {\n            return 0;\n        }\n        if (x === 1) {\n            return 1;\n        }\n        return calcBezier(getTForX(x), mY1, mY2);\n    };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}