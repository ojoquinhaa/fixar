{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";var _excluded=[\"mode\",\"children\",\"icon\",\"avatar\",\"selected\",\"disabled\",\"accessibilityLabel\",\"closeIconAccessibilityLabel\",\"onPress\",\"onLongPress\",\"delayLongPress\",\"onClose\",\"closeIcon\",\"textStyle\",\"style\",\"theme\",\"testID\",\"selectedColor\",\"rippleColor\",\"showSelectedOverlay\",\"ellipsizeMode\",\"compact\",\"elevated\"];function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}function _extends(){_extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import*as React from'react';import Animated from\"react-native-web/dist/exports/Animated\";import Platform from\"react-native-web/dist/exports/Platform\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import TouchableWithoutFeedback from\"react-native-web/dist/exports/TouchableWithoutFeedback\";import View from\"react-native-web/dist/exports/View\";import{useInternalTheme}from\"../../core/theming\";import{white}from\"../../styles/themes/v2/colors\";import hasTouchHandler from\"../../utils/hasTouchHandler\";import Icon from\"../Icon\";import MaterialCommunityIcon from\"../MaterialCommunityIcon\";import Surface from\"../Surface\";import TouchableRipple from\"../TouchableRipple/TouchableRipple\";import Text from\"../Typography/Text\";import{getChipColors}from\"./helpers\";var Chip=function Chip(_ref){var _ref$mode=_ref.mode,mode=_ref$mode===void 0?'flat':_ref$mode,children=_ref.children,icon=_ref.icon,avatar=_ref.avatar,_ref$selected=_ref.selected,selected=_ref$selected===void 0?false:_ref$selected,_ref$disabled=_ref.disabled,disabled=_ref$disabled===void 0?false:_ref$disabled,accessibilityLabel=_ref.accessibilityLabel,_ref$closeIconAccessi=_ref.closeIconAccessibilityLabel,closeIconAccessibilityLabel=_ref$closeIconAccessi===void 0?'Close':_ref$closeIconAccessi,onPress=_ref.onPress,onLongPress=_ref.onLongPress,delayLongPress=_ref.delayLongPress,onClose=_ref.onClose,closeIcon=_ref.closeIcon,textStyle=_ref.textStyle,style=_ref.style,themeOverrides=_ref.theme,_ref$testID=_ref.testID,testID=_ref$testID===void 0?'chip':_ref$testID,selectedColor=_ref.selectedColor,customRippleColor=_ref.rippleColor,_ref$showSelectedOver=_ref.showSelectedOverlay,showSelectedOverlay=_ref$showSelectedOver===void 0?false:_ref$showSelectedOver,ellipsizeMode=_ref.ellipsizeMode,compact=_ref.compact,_ref$elevated=_ref.elevated,elevated=_ref$elevated===void 0?false:_ref$elevated,rest=_objectWithoutProperties(_ref,_excluded);var theme=useInternalTheme(themeOverrides);var isV3=theme.isV3;var _React$useRef=React.useRef(new Animated.Value(isV3&&elevated?1:0)),elevation=_React$useRef.current;var hasPassedTouchHandler=hasTouchHandler({onPress:onPress,onLongPress:onLongPress});var isOutlined=mode==='outlined';var handlePressIn=function handlePressIn(){var scale=theme.animation.scale;Animated.timing(elevation,{toValue:isV3?elevated?2:0:4,duration:200*scale,useNativeDriver:true}).start();};var handlePressOut=function handlePressOut(){var scale=theme.animation.scale;Animated.timing(elevation,{toValue:isV3&&elevated?1:0,duration:150*scale,useNativeDriver:true}).start();};var opacity=isV3?0.38:0.26;var defaultBorderRadius=isV3?8:16;var iconSize=isV3?18:16;var _ref2=StyleSheet.flatten(style)||{},customBackgroundColor=_ref2.backgroundColor,_ref2$borderRadius=_ref2.borderRadius,borderRadius=_ref2$borderRadius===void 0?defaultBorderRadius:_ref2$borderRadius;var _getChipColors=getChipColors({isOutlined:isOutlined,theme:theme,selectedColor:selectedColor,showSelectedOverlay:showSelectedOverlay,customBackgroundColor:customBackgroundColor,disabled:disabled,customRippleColor:customRippleColor}),borderColor=_getChipColors.borderColor,textColor=_getChipColors.textColor,iconColor=_getChipColors.iconColor,rippleColor=_getChipColors.rippleColor,selectedBackgroundColor=_getChipColors.selectedBackgroundColor,backgroundColor=_getChipColors.backgroundColor;var accessibilityState={selected:selected,disabled:disabled};var elevationStyle=isV3||Platform.OS==='android'?elevation:0;var multiplier=isV3?compact?1.5:2:1;var labelSpacings={marginRight:onClose?0:8*multiplier,marginLeft:avatar||icon||selected?4*multiplier:8*multiplier};var contentSpacings={paddingRight:isV3?onClose?34:0:onClose?32:4};var labelTextStyle=_objectSpread({color:textColor},isV3?theme.fonts.labelLarge:theme.fonts.regular);return React.createElement(Surface,_extends({style:[styles.container,isV3&&(isOutlined?styles.md3OutlineContainer:styles.md3FlatContainer),!theme.isV3&&{elevation:elevationStyle},{backgroundColor:selected?selectedBackgroundColor:backgroundColor,borderColor:borderColor,borderRadius:borderRadius},style]},theme.isV3&&{elevation:elevationStyle},rest,{testID:testID+\"-container\",theme:theme}),React.createElement(TouchableRipple,{borderless:true,style:[{borderRadius:borderRadius},styles.touchable],onPress:onPress,onPressIn:hasPassedTouchHandler?handlePressIn:undefined,onPressOut:hasPassedTouchHandler?handlePressOut:undefined,onLongPress:onLongPress,delayLongPress:delayLongPress,rippleColor:rippleColor,disabled:disabled,accessibilityLabel:accessibilityLabel,accessibilityRole:\"button\",accessibilityState:accessibilityState,testID:testID,theme:theme},React.createElement(View,{style:[styles.content,isV3&&styles.md3Content,contentSpacings]},avatar&&!icon?React.createElement(View,{style:[styles.avatarWrapper,isV3&&styles.md3AvatarWrapper,disabled&&{opacity:opacity}]},React.isValidElement(avatar)?React.cloneElement(avatar,{style:[styles.avatar,avatar.props.style]}):avatar):null,icon||selected?React.createElement(View,{style:[styles.icon,isV3&&styles.md3Icon,avatar?[styles.avatar,styles.avatarSelected,isV3&&selected&&styles.md3SelectedIcon]:null]},icon?React.createElement(Icon,{source:icon,color:avatar?white:!disabled&&theme.isV3?theme.colors.primary:iconColor,size:18,theme:theme}):React.createElement(MaterialCommunityIcon,{name:\"check\",color:avatar?white:iconColor,size:18,direction:\"ltr\"})):null,React.createElement(Text,{variant:\"labelLarge\",selectable:false,numberOfLines:1,style:[isV3?styles.md3LabelText:styles.labelText,labelTextStyle,labelSpacings,textStyle],ellipsizeMode:ellipsizeMode},children))),onClose?React.createElement(View,{style:styles.closeButtonStyle},React.createElement(TouchableWithoutFeedback,{onPress:onClose,accessibilityRole:\"button\",accessibilityLabel:closeIconAccessibilityLabel},React.createElement(View,{style:[styles.icon,styles.closeIcon,isV3&&styles.md3CloseIcon]},closeIcon?React.createElement(Icon,{source:closeIcon,color:iconColor,size:iconSize}):React.createElement(MaterialCommunityIcon,{name:isV3?'close':'close-circle',size:iconSize,color:iconColor,direction:\"ltr\"})))):null);};var styles=StyleSheet.create({container:{borderWidth:StyleSheet.hairlineWidth,borderStyle:'solid',flexDirection:Platform.select({default:'column',web:'row'})},md3OutlineContainer:{borderWidth:1},md3FlatContainer:{borderWidth:0},content:{flexDirection:'row',alignItems:'center',paddingLeft:4,position:'relative',flexGrow:1},md3Content:{paddingLeft:0},icon:{padding:4,alignSelf:'center'},md3Icon:{paddingLeft:8,paddingRight:0},closeIcon:{marginRight:4},md3CloseIcon:{marginRight:8,padding:0},labelText:{minHeight:24,lineHeight:24,textAlignVertical:'center',marginVertical:4},md3LabelText:{textAlignVertical:'center',marginVertical:6},avatar:{width:24,height:24,borderRadius:12},avatarWrapper:{marginRight:4},md3AvatarWrapper:{marginLeft:4,marginRight:0},md3SelectedIcon:{paddingLeft:4},avatarSelected:{position:'absolute',top:4,left:4,backgroundColor:'rgba(0, 0, 0, .29)'},closeButtonStyle:{position:'absolute',right:0,height:'100%',justifyContent:'center',alignItems:'center'},touchable:{flexGrow:1}});export default Chip;","map":{"version":3,"names":["React","Animated","Platform","StyleSheet","TouchableWithoutFeedback","View","useInternalTheme","white","hasTouchHandler","Icon","MaterialCommunityIcon","Surface","TouchableRipple","Text","getChipColors","Chip","_ref","_ref$mode","mode","children","icon","avatar","_ref$selected","selected","_ref$disabled","disabled","accessibilityLabel","_ref$closeIconAccessi","closeIconAccessibilityLabel","onPress","onLongPress","delayLongPress","onClose","closeIcon","textStyle","style","themeOverrides","theme","_ref$testID","testID","selectedColor","customRippleColor","rippleColor","_ref$showSelectedOver","showSelectedOverlay","ellipsizeMode","compact","_ref$elevated","elevated","rest","_objectWithoutProperties","_excluded","isV3","_React$useRef","useRef","Value","elevation","current","hasPassedTouchHandler","isOutlined","handlePressIn","scale","animation","timing","toValue","duration","useNativeDriver","start","handlePressOut","opacity","defaultBorderRadius","iconSize","_ref2","flatten","customBackgroundColor","backgroundColor","_ref2$borderRadius","borderRadius","_getChipColors","borderColor","textColor","iconColor","selectedBackgroundColor","accessibilityState","elevationStyle","OS","multiplier","labelSpacings","marginRight","marginLeft","contentSpacings","paddingRight","labelTextStyle","_objectSpread","color","fonts","labelLarge","regular","createElement","_extends","styles","container","md3OutlineContainer","md3FlatContainer","borderless","touchable","onPressIn","undefined","onPressOut","accessibilityRole","content","md3Content","avatarWrapper","md3AvatarWrapper","isValidElement","cloneElement","props","md3Icon","avatarSelected","md3SelectedIcon","source","colors","primary","size","name","direction","variant","selectable","numberOfLines","md3LabelText","labelText","closeButtonStyle","md3CloseIcon","create","borderWidth","hairlineWidth","borderStyle","flexDirection","select","default","web","alignItems","paddingLeft","position","flexGrow","padding","alignSelf","minHeight","lineHeight","textAlignVertical","marginVertical","width","height","top","left","right","justifyContent"],"sources":["/home/ojoquinhaa/Documentos/trabalho/inktone/frontend/node_modules/react-native-paper/src/components/Chip/Chip.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  AccessibilityState,\n  Animated,\n  ColorValue,\n  GestureResponderEvent,\n  Platform,\n  StyleProp,\n  StyleSheet,\n  TextStyle,\n  TouchableWithoutFeedback,\n  View,\n  ViewStyle,\n} from 'react-native';\n\nimport { useInternalTheme } from '../../core/theming';\nimport { white } from '../../styles/themes/v2/colors';\nimport type { $Omit, EllipsizeProp, ThemeProp } from '../../types';\nimport hasTouchHandler from '../../utils/hasTouchHandler';\nimport type { IconSource } from '../Icon';\nimport Icon from '../Icon';\nimport MaterialCommunityIcon from '../MaterialCommunityIcon';\nimport Surface from '../Surface';\nimport TouchableRipple from '../TouchableRipple/TouchableRipple';\nimport Text from '../Typography/Text';\nimport { getChipColors } from './helpers';\n\nexport type Props = $Omit<React.ComponentProps<typeof Surface>, 'mode'> & {\n  /**\n   * Mode of the chip.\n   * - `flat` - flat chip without outline.\n   * - `outlined` - chip with an outline.\n   */\n  mode?: 'flat' | 'outlined';\n  /**\n   * Text content of the `Chip`.\n   */\n  children: React.ReactNode;\n  /**\n   * Icon to display for the `Chip`. Both icon and avatar cannot be specified.\n   */\n  icon?: IconSource;\n  /**\n   * Avatar to display for the `Chip`. Both icon and avatar cannot be specified.\n   */\n  avatar?: React.ReactNode;\n  /**\n   * Icon to display as the close button for the `Chip`. The icon appears only when the onClose prop is specified.\n   */\n  closeIcon?: IconSource;\n  /**\n   * Whether chip is selected.\n   */\n  selected?: boolean;\n  /**\n   * Whether to style the chip color as selected.\n   * Note: With theme version 3 `selectedColor` doesn't apply to the `icon`.\n   *       If you want specify custom color for the `icon`, render your own `Icon` component.\n   */\n  selectedColor?: string;\n  /**\n   * @supported Available in v5.x with theme version 3\n   * Whether to display overlay on selected chip\n   */\n  showSelectedOverlay?: boolean;\n  /**\n   * Color of the ripple effect.\n   */\n  rippleColor?: ColorValue;\n  /**\n   * Whether the chip is disabled. A disabled chip is greyed out and `onPress` is not called on touch.\n   */\n  disabled?: boolean;\n  /**\n   * Accessibility label for the chip. This is read by the screen reader when the user taps the chip.\n   */\n  accessibilityLabel?: string;\n  /**\n   * Accessibility label for the close icon. This is read by the screen reader when the user taps the close icon.\n   */\n  closeIconAccessibilityLabel?: string;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: (e: GestureResponderEvent) => void;\n  /**\n   * @supported Available in v5.x with theme version 3\n   * Sets smaller horizontal paddings `12dp` around label, when there is only label.\n   */\n  compact?: boolean;\n  /**\n   * @supported Available in v5.x with theme version 3\n   * Whether chip should have the elevation.\n   */\n  elevated?: boolean;\n  /**\n   * Function to execute on long press.\n   */\n  onLongPress?: () => void;\n  /**\n   * The number of milliseconds a user must touch the element before executing `onLongPress`.\n   */\n  delayLongPress?: number;\n  /**\n   * Function to execute on close button press. The close button appears only when this prop is specified.\n   */\n  onClose?: () => void;\n  /**\n   * Style of chip's text\n   */\n  textStyle?: StyleProp<TextStyle>;\n  style?: Animated.WithAnimatedValue<StyleProp<ViewStyle>>;\n  /**\n   * @optional\n   */\n  theme?: ThemeProp;\n  /**\n   * Pass down testID from chip props to touchable for Detox tests.\n   */\n  testID?: string;\n  /**\n   * Ellipsize Mode for the children text\n   */\n  ellipsizeMode?: EllipsizeProp;\n};\n\n/**\n * Chips can be used to display entities in small blocks.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"small\" src=\"screenshots/chip-1.png\" />\n *     <figcaption>Flat chip</figcaption>\n *   </figure>\n *   <figure>\n *     <img class=\"small\" src=\"screenshots/chip-2.png\" />\n *     <figcaption>Outlined chip</figcaption>\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Chip } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <Chip icon=\"information\" onPress={() => console.log('Pressed')}>Example Chip</Chip>\n * );\n *\n * export default MyComponent;\n * ```\n */\nconst Chip = ({\n  mode = 'flat',\n  children,\n  icon,\n  avatar,\n  selected = false,\n  disabled = false,\n  accessibilityLabel,\n  closeIconAccessibilityLabel = 'Close',\n  onPress,\n  onLongPress,\n  delayLongPress,\n  onClose,\n  closeIcon,\n  textStyle,\n  style,\n  theme: themeOverrides,\n  testID = 'chip',\n  selectedColor,\n  rippleColor: customRippleColor,\n  showSelectedOverlay = false,\n  ellipsizeMode,\n  compact,\n  elevated = false,\n  ...rest\n}: Props) => {\n  const theme = useInternalTheme(themeOverrides);\n  const { isV3 } = theme;\n\n  const { current: elevation } = React.useRef<Animated.Value>(\n    new Animated.Value(isV3 && elevated ? 1 : 0)\n  );\n\n  const hasPassedTouchHandler = hasTouchHandler({ onPress, onLongPress });\n\n  const isOutlined = mode === 'outlined';\n\n  const handlePressIn = () => {\n    const { scale } = theme.animation;\n    Animated.timing(elevation, {\n      toValue: isV3 ? (elevated ? 2 : 0) : 4,\n      duration: 200 * scale,\n      useNativeDriver: true,\n    }).start();\n  };\n\n  const handlePressOut = () => {\n    const { scale } = theme.animation;\n    Animated.timing(elevation, {\n      toValue: isV3 && elevated ? 1 : 0,\n      duration: 150 * scale,\n      useNativeDriver: true,\n    }).start();\n  };\n\n  const opacity = isV3 ? 0.38 : 0.26;\n  const defaultBorderRadius = isV3 ? 8 : 16;\n  const iconSize = isV3 ? 18 : 16;\n\n  const {\n    backgroundColor: customBackgroundColor,\n    borderRadius = defaultBorderRadius,\n  } = (StyleSheet.flatten(style) || {}) as ViewStyle;\n\n  const {\n    borderColor,\n    textColor,\n    iconColor,\n    rippleColor,\n    selectedBackgroundColor,\n    backgroundColor,\n  } = getChipColors({\n    isOutlined,\n    theme,\n    selectedColor,\n    showSelectedOverlay,\n    customBackgroundColor,\n    disabled,\n    customRippleColor,\n  });\n\n  const accessibilityState: AccessibilityState = {\n    selected,\n    disabled,\n  };\n\n  const elevationStyle = isV3 || Platform.OS === 'android' ? elevation : 0;\n  const multiplier = isV3 ? (compact ? 1.5 : 2) : 1;\n  const labelSpacings = {\n    marginRight: onClose ? 0 : 8 * multiplier,\n    marginLeft: avatar || icon || selected ? 4 * multiplier : 8 * multiplier,\n  };\n  const contentSpacings = {\n    paddingRight: isV3 ? (onClose ? 34 : 0) : onClose ? 32 : 4,\n  };\n  const labelTextStyle = {\n    color: textColor,\n    ...(isV3 ? theme.fonts.labelLarge : theme.fonts.regular),\n  };\n  return (\n    <Surface\n      style={[\n        styles.container,\n        isV3 &&\n          (isOutlined ? styles.md3OutlineContainer : styles.md3FlatContainer),\n        !theme.isV3 && {\n          elevation: elevationStyle,\n        },\n        {\n          backgroundColor: selected ? selectedBackgroundColor : backgroundColor,\n          borderColor,\n          borderRadius,\n        },\n        style,\n      ]}\n      {...(theme.isV3 && { elevation: elevationStyle })}\n      {...rest}\n      testID={`${testID}-container`}\n      theme={theme}\n    >\n      <TouchableRipple\n        borderless\n        style={[{ borderRadius }, styles.touchable]}\n        onPress={onPress}\n        onPressIn={hasPassedTouchHandler ? handlePressIn : undefined}\n        onPressOut={hasPassedTouchHandler ? handlePressOut : undefined}\n        onLongPress={onLongPress}\n        delayLongPress={delayLongPress}\n        rippleColor={rippleColor}\n        disabled={disabled}\n        accessibilityLabel={accessibilityLabel}\n        accessibilityRole=\"button\"\n        accessibilityState={accessibilityState}\n        testID={testID}\n        theme={theme}\n      >\n        <View\n          style={[styles.content, isV3 && styles.md3Content, contentSpacings]}\n        >\n          {avatar && !icon ? (\n            <View\n              style={[\n                styles.avatarWrapper,\n                isV3 && styles.md3AvatarWrapper,\n                disabled && { opacity },\n              ]}\n            >\n              {React.isValidElement(avatar)\n                ? React.cloneElement(avatar as React.ReactElement<any>, {\n                    style: [styles.avatar, avatar.props.style],\n                  })\n                : avatar}\n            </View>\n          ) : null}\n          {icon || selected ? (\n            <View\n              style={[\n                styles.icon,\n                isV3 && styles.md3Icon,\n                avatar\n                  ? [\n                      styles.avatar,\n                      styles.avatarSelected,\n                      isV3 && selected && styles.md3SelectedIcon,\n                    ]\n                  : null,\n              ]}\n            >\n              {icon ? (\n                <Icon\n                  source={icon}\n                  color={\n                    avatar\n                      ? white\n                      : !disabled && theme.isV3\n                      ? theme.colors.primary\n                      : iconColor\n                  }\n                  size={18}\n                  theme={theme}\n                />\n              ) : (\n                <MaterialCommunityIcon\n                  name=\"check\"\n                  color={avatar ? white : iconColor}\n                  size={18}\n                  direction=\"ltr\"\n                />\n              )}\n            </View>\n          ) : null}\n          <Text\n            variant=\"labelLarge\"\n            selectable={false}\n            numberOfLines={1}\n            style={[\n              isV3 ? styles.md3LabelText : styles.labelText,\n              labelTextStyle,\n              labelSpacings,\n              textStyle,\n            ]}\n            ellipsizeMode={ellipsizeMode}\n          >\n            {children}\n          </Text>\n        </View>\n      </TouchableRipple>\n      {onClose ? (\n        <View style={styles.closeButtonStyle}>\n          <TouchableWithoutFeedback\n            onPress={onClose}\n            accessibilityRole=\"button\"\n            accessibilityLabel={closeIconAccessibilityLabel}\n          >\n            <View\n              style={[\n                styles.icon,\n                styles.closeIcon,\n                isV3 && styles.md3CloseIcon,\n              ]}\n            >\n              {closeIcon ? (\n                <Icon source={closeIcon} color={iconColor} size={iconSize} />\n              ) : (\n                <MaterialCommunityIcon\n                  name={isV3 ? 'close' : 'close-circle'}\n                  size={iconSize}\n                  color={iconColor}\n                  direction=\"ltr\"\n                />\n              )}\n            </View>\n          </TouchableWithoutFeedback>\n        </View>\n      ) : null}\n    </Surface>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    borderWidth: StyleSheet.hairlineWidth,\n    borderStyle: 'solid',\n    flexDirection: Platform.select({ default: 'column', web: 'row' }),\n  },\n  md3OutlineContainer: {\n    borderWidth: 1,\n  },\n  md3FlatContainer: {\n    borderWidth: 0,\n  },\n  content: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    paddingLeft: 4,\n    position: 'relative',\n    flexGrow: 1,\n  },\n  md3Content: {\n    paddingLeft: 0,\n  },\n  icon: {\n    padding: 4,\n    alignSelf: 'center',\n  },\n  md3Icon: {\n    paddingLeft: 8,\n    paddingRight: 0,\n  },\n  closeIcon: {\n    marginRight: 4,\n  },\n  md3CloseIcon: {\n    marginRight: 8,\n    padding: 0,\n  },\n  labelText: {\n    minHeight: 24,\n    lineHeight: 24,\n    textAlignVertical: 'center',\n    marginVertical: 4,\n  },\n  md3LabelText: {\n    textAlignVertical: 'center',\n    marginVertical: 6,\n  },\n  avatar: {\n    width: 24,\n    height: 24,\n    borderRadius: 12,\n  },\n  avatarWrapper: {\n    marginRight: 4,\n  },\n  md3AvatarWrapper: {\n    marginLeft: 4,\n    marginRight: 0,\n  },\n  md3SelectedIcon: {\n    paddingLeft: 4,\n  },\n  // eslint-disable-next-line react-native/no-color-literals\n  avatarSelected: {\n    position: 'absolute',\n    top: 4,\n    left: 4,\n    backgroundColor: 'rgba(0, 0, 0, .29)',\n  },\n  closeButtonStyle: {\n    position: 'absolute',\n    right: 0,\n    height: '100%',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  touchable: {\n    flexGrow: 1,\n  },\n});\n\nexport default Chip;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}