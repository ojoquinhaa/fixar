{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}function _extends(){_extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import React from'react';import{getConstants}from\"../helpers\";import{AdornmentSide,AdornmentType,InputMode}from\"./enums\";import TextInputAffix,{AffixAdornment}from\"./TextInputAffix\";import TextInputIcon,{IconAdornment}from\"./TextInputIcon\";export function getAdornmentConfig(_ref){var left=_ref.left,right=_ref.right;var adornmentConfig=[];if(left||right){[{side:AdornmentSide.Left,adornment:left},{side:AdornmentSide.Right,adornment:right}].forEach(function(_ref2){var side=_ref2.side,adornment=_ref2.adornment;if(adornment&&React.isValidElement(adornment)){var type;if(adornment.type===TextInputAffix){type=AdornmentType.Affix;}else if(adornment.type===TextInputIcon){type=AdornmentType.Icon;}adornmentConfig.push({side:side,type:type});}});}return adornmentConfig;}export function getAdornmentStyleAdjustmentForNativeInput(_ref3){var adornmentConfig=_ref3.adornmentConfig,leftAffixWidth=_ref3.leftAffixWidth,rightAffixWidth=_ref3.rightAffixWidth,paddingHorizontal=_ref3.paddingHorizontal,_ref3$inputOffset=_ref3.inputOffset,inputOffset=_ref3$inputOffset===void 0?0:_ref3$inputOffset,mode=_ref3.mode,isV3=_ref3.isV3;var _getConstants=getConstants(isV3),OUTLINED_INPUT_OFFSET=_getConstants.OUTLINED_INPUT_OFFSET,ADORNMENT_OFFSET=_getConstants.ADORNMENT_OFFSET;if(adornmentConfig.length){var adornmentStyleAdjustmentForNativeInput=adornmentConfig.map(function(_ref4){var _ref7;var type=_ref4.type,side=_ref4.side;var isLeftSide=side===AdornmentSide.Left;var inputModeAdornemntOffset=mode===InputMode.Outlined?ADORNMENT_OFFSET+OUTLINED_INPUT_OFFSET:ADORNMENT_OFFSET;var paddingKey=\"padding\"+captalize(side);var affixWidth=isLeftSide?leftAffixWidth:rightAffixWidth;var padding=typeof paddingHorizontal==='number'?paddingHorizontal:inputModeAdornemntOffset;var offset=affixWidth+padding;var isAffix=type===AdornmentType.Affix;var marginKey=\"margin\"+captalize(side);return _ref7={},_defineProperty(_ref7,marginKey,isAffix?0:offset),_defineProperty(_ref7,paddingKey,isAffix?offset:inputOffset),_ref7;});var allStyleAdjustmentsMerged=adornmentStyleAdjustmentForNativeInput.reduce(function(mergedStyles,currentStyle){return _objectSpread(_objectSpread({},mergedStyles),currentStyle);},{});return allStyleAdjustmentsMerged;}else{return[{}];}}var captalize=function captalize(text){return text.charAt(0).toUpperCase()+text.slice(1);};var TextInputAdornment=function TextInputAdornment(_ref5){var adornmentConfig=_ref5.adornmentConfig,left=_ref5.left,right=_ref5.right,onAffixChange=_ref5.onAffixChange,textStyle=_ref5.textStyle,visible=_ref5.visible,topPosition=_ref5.topPosition,isTextInputFocused=_ref5.isTextInputFocused,forceFocus=_ref5.forceFocus,paddingHorizontal=_ref5.paddingHorizontal,maxFontSizeMultiplier=_ref5.maxFontSizeMultiplier,theme=_ref5.theme,disabled=_ref5.disabled;if(adornmentConfig.length){return React.createElement(React.Fragment,null,adornmentConfig.map(function(_ref6){var type=_ref6.type,side=_ref6.side;var inputAdornmentComponent;if(side===AdornmentSide.Left){inputAdornmentComponent=left;}else if(side===AdornmentSide.Right){inputAdornmentComponent=right;}var commonProps={side:side,testID:side+\"-\"+type+\"-adornment\",isTextInputFocused:isTextInputFocused,paddingHorizontal:paddingHorizontal,disabled:disabled};if(type===AdornmentType.Icon){return React.createElement(IconAdornment,_extends({},commonProps,{theme:theme,key:side,icon:inputAdornmentComponent,topPosition:topPosition[AdornmentType.Icon],forceFocus:forceFocus}));}else if(type===AdornmentType.Affix){return React.createElement(AffixAdornment,_extends({},commonProps,{key:side,topPosition:topPosition[AdornmentType.Affix][side],affix:inputAdornmentComponent,textStyle:textStyle,onLayout:onAffixChange[side],visible:visible,maxFontSizeMultiplier:maxFontSizeMultiplier}));}else{return null;}}));}else{return null;}};export default TextInputAdornment;","map":{"version":3,"names":["React","getConstants","AdornmentSide","AdornmentType","InputMode","TextInputAffix","AffixAdornment","TextInputIcon","IconAdornment","getAdornmentConfig","_ref","left","right","adornmentConfig","side","Left","adornment","Right","forEach","_ref2","isValidElement","type","Affix","Icon","push","getAdornmentStyleAdjustmentForNativeInput","_ref3","leftAffixWidth","rightAffixWidth","paddingHorizontal","_ref3$inputOffset","inputOffset","mode","isV3","_getConstants","OUTLINED_INPUT_OFFSET","ADORNMENT_OFFSET","length","adornmentStyleAdjustmentForNativeInput","map","_ref4","_ref7","isLeftSide","inputModeAdornemntOffset","Outlined","paddingKey","captalize","affixWidth","padding","offset","isAffix","marginKey","_defineProperty","allStyleAdjustmentsMerged","reduce","mergedStyles","currentStyle","_objectSpread","text","charAt","toUpperCase","slice","TextInputAdornment","_ref5","onAffixChange","textStyle","visible","topPosition","isTextInputFocused","forceFocus","maxFontSizeMultiplier","theme","disabled","createElement","Fragment","_ref6","inputAdornmentComponent","commonProps","testID","_extends","key","icon","affix","onLayout"],"sources":["/home/ojoquinhaa/Documentos/trabalho/inktone/frontend/node_modules/react-native-paper/src/components/TextInput/Adornment/TextInputAdornment.tsx"],"sourcesContent":["import React from 'react';\nimport type {\n  LayoutChangeEvent,\n  TextStyle,\n  StyleProp,\n  Animated,\n} from 'react-native';\n\nimport type { ThemeProp } from 'src/types';\n\nimport { getConstants } from '../helpers';\nimport { AdornmentSide, AdornmentType, InputMode } from './enums';\nimport TextInputAffix, { AffixAdornment } from './TextInputAffix';\nimport TextInputIcon, { IconAdornment } from './TextInputIcon';\nimport type {\n  AdornmentConfig,\n  AdornmentStyleAdjustmentForNativeInput,\n} from './types';\n\nexport function getAdornmentConfig({\n  left,\n  right,\n}: {\n  left?: React.ReactNode;\n  right?: React.ReactNode;\n}): Array<AdornmentConfig> {\n  let adornmentConfig: any[] = [];\n  if (left || right) {\n    [\n      { side: AdornmentSide.Left, adornment: left },\n      { side: AdornmentSide.Right, adornment: right },\n    ].forEach(({ side, adornment }) => {\n      if (adornment && React.isValidElement(adornment)) {\n        let type;\n        if (adornment.type === TextInputAffix) {\n          type = AdornmentType.Affix;\n        } else if (adornment.type === TextInputIcon) {\n          type = AdornmentType.Icon;\n        }\n        adornmentConfig.push({\n          side,\n          type,\n        });\n      }\n    });\n  }\n\n  return adornmentConfig;\n}\n\nexport function getAdornmentStyleAdjustmentForNativeInput({\n  adornmentConfig,\n  leftAffixWidth,\n  rightAffixWidth,\n  paddingHorizontal,\n  inputOffset = 0,\n  mode,\n  isV3,\n}: {\n  inputOffset?: number;\n  adornmentConfig: AdornmentConfig[];\n  leftAffixWidth: number;\n  rightAffixWidth: number;\n  mode?: 'outlined' | 'flat';\n  paddingHorizontal?: number | string;\n  isV3?: boolean;\n}): AdornmentStyleAdjustmentForNativeInput | {} {\n  const { OUTLINED_INPUT_OFFSET, ADORNMENT_OFFSET } = getConstants(isV3);\n\n  if (adornmentConfig.length) {\n    const adornmentStyleAdjustmentForNativeInput = adornmentConfig.map(\n      ({ type, side }: AdornmentConfig) => {\n        const isLeftSide = side === AdornmentSide.Left;\n        const inputModeAdornemntOffset =\n          mode === InputMode.Outlined\n            ? ADORNMENT_OFFSET + OUTLINED_INPUT_OFFSET\n            : ADORNMENT_OFFSET;\n        const paddingKey = `padding${captalize(side)}`;\n        const affixWidth = isLeftSide ? leftAffixWidth : rightAffixWidth;\n        const padding =\n          typeof paddingHorizontal === 'number'\n            ? paddingHorizontal\n            : inputModeAdornemntOffset;\n        const offset = affixWidth + padding;\n\n        const isAffix = type === AdornmentType.Affix;\n        const marginKey = `margin${captalize(side)}`;\n\n        return {\n          [marginKey]: isAffix ? 0 : offset,\n          [paddingKey]: isAffix ? offset : inputOffset,\n        };\n      }\n    );\n    const allStyleAdjustmentsMerged =\n      adornmentStyleAdjustmentForNativeInput.reduce(\n        (mergedStyles, currentStyle) => {\n          return {\n            ...mergedStyles,\n            ...currentStyle,\n          };\n        },\n        {}\n      );\n    return allStyleAdjustmentsMerged;\n  } else {\n    return [{}];\n  }\n}\n\nconst captalize = (text: string) =>\n  text.charAt(0).toUpperCase() + text.slice(1);\n\nexport interface TextInputAdornmentProps {\n  forceFocus: () => void;\n  adornmentConfig: AdornmentConfig[];\n  topPosition: {\n    [AdornmentType.Affix]: {\n      [AdornmentSide.Left]: number | null;\n      [AdornmentSide.Right]: number | null;\n    };\n    [AdornmentType.Icon]: number;\n  };\n  onAffixChange: {\n    [AdornmentSide.Left]: (event: LayoutChangeEvent) => void;\n    [AdornmentSide.Right]: (event: LayoutChangeEvent) => void;\n  };\n  left?: React.ReactNode;\n  right?: React.ReactNode;\n  textStyle?: StyleProp<TextStyle>;\n  visible?: Animated.Value;\n  isTextInputFocused: boolean;\n  paddingHorizontal?: number | string;\n  maxFontSizeMultiplier?: number | undefined | null;\n  theme?: ThemeProp;\n  disabled?: boolean;\n}\n\nconst TextInputAdornment: React.FunctionComponent<TextInputAdornmentProps> = ({\n  adornmentConfig,\n  left,\n  right,\n  onAffixChange,\n  textStyle,\n  visible,\n  topPosition,\n  isTextInputFocused,\n  forceFocus,\n  paddingHorizontal,\n  maxFontSizeMultiplier,\n  theme,\n  disabled,\n}) => {\n  if (adornmentConfig.length) {\n    return (\n      <>\n        {adornmentConfig.map(({ type, side }: AdornmentConfig) => {\n          let inputAdornmentComponent;\n          if (side === AdornmentSide.Left) {\n            inputAdornmentComponent = left;\n          } else if (side === AdornmentSide.Right) {\n            inputAdornmentComponent = right;\n          }\n\n          const commonProps = {\n            side: side,\n            testID: `${side}-${type}-adornment`,\n            isTextInputFocused,\n            paddingHorizontal,\n            disabled,\n          };\n          if (type === AdornmentType.Icon) {\n            return (\n              <IconAdornment\n                {...commonProps}\n                theme={theme}\n                key={side}\n                icon={inputAdornmentComponent}\n                topPosition={topPosition[AdornmentType.Icon]}\n                forceFocus={forceFocus}\n              />\n            );\n          } else if (type === AdornmentType.Affix) {\n            return (\n              <AffixAdornment\n                {...commonProps}\n                key={side}\n                topPosition={topPosition[AdornmentType.Affix][side]}\n                affix={inputAdornmentComponent}\n                textStyle={textStyle}\n                onLayout={onAffixChange[side]}\n                visible={visible}\n                maxFontSizeMultiplier={maxFontSizeMultiplier}\n              />\n            );\n          } else {\n            return null;\n          }\n        })}\n      </>\n    );\n  } else {\n    return null;\n  }\n};\n\nexport default TextInputAdornment;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}