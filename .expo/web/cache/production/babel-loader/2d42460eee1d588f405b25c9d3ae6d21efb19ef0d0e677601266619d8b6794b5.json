{"ast":null,"code":"import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";var _excluded=[\"label\",\"size\",\"style\",\"labelStyle\",\"color\",\"theme\"],_excluded2=[\"backgroundColor\"];function _extends(){_extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import*as React from'react';import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import useWindowDimensions from\"react-native-web/dist/exports/useWindowDimensions\";import View from\"react-native-web/dist/exports/View\";import{useInternalTheme}from\"../../core/theming\";import{white}from\"../../styles/themes/v2/colors\";import getContrastingColor from\"../../utils/getContrastingColor\";import Text from\"../Typography/Text\";var defaultSize=64;var AvatarText=function AvatarText(_ref){var _theme$colors;var label=_ref.label,_ref$size=_ref.size,size=_ref$size===void 0?defaultSize:_ref$size,style=_ref.style,labelStyle=_ref.labelStyle,customColor=_ref.color,themeOverrides=_ref.theme,rest=_objectWithoutProperties(_ref,_excluded);var theme=useInternalTheme(themeOverrides);var _ref2=StyleSheet.flatten(style)||{},_ref2$backgroundColor=_ref2.backgroundColor,backgroundColor=_ref2$backgroundColor===void 0?(_theme$colors=theme.colors)===null||_theme$colors===void 0?void 0:_theme$colors.primary:_ref2$backgroundColor,restStyle=_objectWithoutProperties(_ref2,_excluded2);var textColor=customColor!=null?customColor:getContrastingColor(backgroundColor,white,'rgba(0, 0, 0, .54)');var _useWindowDimensions=useWindowDimensions(),fontScale=_useWindowDimensions.fontScale;return React.createElement(View,_extends({style:[{width:size,height:size,borderRadius:size/2,backgroundColor:backgroundColor},styles.container,restStyle]},rest),React.createElement(Text,{style:[styles.text,{color:textColor,fontSize:size/2,lineHeight:size/fontScale},labelStyle],numberOfLines:1},label));};AvatarText.displayName='Avatar.Text';var styles=StyleSheet.create({container:{justifyContent:'center',alignItems:'center'},text:{textAlign:'center',textAlignVertical:'center'}});export default AvatarText;","map":{"version":3,"names":["React","StyleSheet","useWindowDimensions","View","useInternalTheme","white","getContrastingColor","Text","defaultSize","AvatarText","_ref","_theme$colors","label","_ref$size","size","style","labelStyle","customColor","color","themeOverrides","theme","rest","_objectWithoutProperties","_excluded","_ref2","flatten","_ref2$backgroundColor","backgroundColor","colors","primary","restStyle","_excluded2","textColor","_useWindowDimensions","fontScale","createElement","_extends","width","height","borderRadius","styles","container","text","fontSize","lineHeight","numberOfLines","displayName","create","justifyContent","alignItems","textAlign","textAlignVertical"],"sources":["/home/ojoquinhaa/Documentos/trabalho/inktone/frontend/node_modules/react-native-paper/src/components/Avatar/AvatarText.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  StyleProp,\n  StyleSheet,\n  TextStyle,\n  useWindowDimensions,\n  View,\n  ViewStyle,\n} from 'react-native';\n\nimport { useInternalTheme } from '../../core/theming';\nimport { white } from '../../styles/themes/v2/colors';\nimport type { ThemeProp } from '../../types';\nimport getContrastingColor from '../../utils/getContrastingColor';\nimport Text from '../Typography/Text';\n\nconst defaultSize = 64;\n\nexport type Props = React.ComponentPropsWithRef<typeof View> & {\n  /**\n   * Initials to show as the text in the `Avatar`.\n   */\n  label: string;\n  /**\n   * Size of the avatar.\n   */\n  size?: number;\n  /**\n   * Custom color for the text.\n   */\n  color?: string;\n  /**\n   * Style for text container\n   */\n  style?: StyleProp<ViewStyle>;\n  /**\n   * Style for the title.\n   */\n  labelStyle?: StyleProp<TextStyle>;\n  /**\n   * @optional\n   */\n  theme?: ThemeProp;\n};\n\n/**\n * Avatars can be used to represent people in a graphical way.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/avatar-text.png\" />\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Avatar } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <Avatar.Text size={24} label=\"XD\" />\n * );\n * ```\n */\nconst AvatarText = ({\n  label,\n  size = defaultSize,\n  style,\n  labelStyle,\n  color: customColor,\n  theme: themeOverrides,\n  ...rest\n}: Props) => {\n  const theme = useInternalTheme(themeOverrides);\n  const { backgroundColor = theme.colors?.primary, ...restStyle } =\n    StyleSheet.flatten(style) || {};\n  const textColor =\n    customColor ??\n    getContrastingColor(backgroundColor, white, 'rgba(0, 0, 0, .54)');\n  const { fontScale } = useWindowDimensions();\n\n  return (\n    <View\n      style={[\n        {\n          width: size,\n          height: size,\n          borderRadius: size / 2,\n          backgroundColor,\n        },\n        styles.container,\n        restStyle,\n      ]}\n      {...rest}\n    >\n      <Text\n        style={[\n          styles.text,\n          {\n            color: textColor,\n            fontSize: size / 2,\n            lineHeight: size / fontScale,\n          },\n          labelStyle,\n        ]}\n        numberOfLines={1}\n      >\n        {label}\n      </Text>\n    </View>\n  );\n};\n\nAvatarText.displayName = 'Avatar.Text';\n\nconst styles = StyleSheet.create({\n  container: {\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  text: {\n    textAlign: 'center',\n    textAlignVertical: 'center',\n  },\n});\n\nexport default AvatarText;\n"],"mappings":"meAAA,MAAO,GAAK,CAAAA,KAAK,KAAM,OAAO,QAAAC,UAAA,uDAAAC,mBAAA,gEAAAC,IAAA,0CAU9B,OAASC,gBAAgB,0BACzB,OAASC,KAAK,qCAEd,MAAO,CAAAC,mBAAmB,uCAC1B,MAAO,CAAAC,IAAI,0BAEX,GAAM,CAAAC,WAAW,CAAG,EAAE,CAgDtB,GAAM,CAAAC,UAAU,CAAG,QAAb,CAAAA,UAAUA,CAAGC,IAAA,CAQN,KAAAC,aAAA,IAPX,CAAAC,KAAK,CAOCF,IAAA,CAPNE,KAAK,CAAAC,SAAA,CAOCH,IAAA,CANNI,IAAI,CAAJA,IAAI,CAAAD,SAAA,UAAGL,WAAW,CAAAK,SAAA,CAClBE,KAAK,CAKCL,IAAA,CALNK,KAAK,CACLC,UAAU,CAIJN,IAAA,CAJNM,UAAU,CACHC,WAAW,CAGZP,IAAA,CAHNQ,KAAK,CACEC,cAAc,CAEfT,IAAA,CAFNU,KAAK,CACFC,IAAA,CAAAC,wBAAA,CACGZ,IAAA,CAAAa,SAAA,EACN,GAAM,CAAAH,KAAK,CAAGhB,gBAAgB,CAACe,cAAc,CAAC,CAC9C,IAAAK,KAAA,CACEvB,UAAU,CAACwB,OAAO,CAACV,KAAK,CAAC,EAAI,CAAC,CAAC,CAAAW,qBAAA,CAAAF,KAAA,CADzBG,eAAe,CAAfA,eAAe,CAAAD,qBAAA,WAAAf,aAAA,CAAGS,KAAK,CAACQ,MAAM,UAAAjB,aAAA,iBAAZA,aAAA,CAAckB,OAAO,CAAAH,qBAAA,CAAKI,SAAA,CAAAR,wBAAA,CAAAE,KAAA,CAAAO,UAAA,EAEpD,GAAM,CAAAC,SAAS,CACbf,WAAW,OAAXA,WAAW,CACXX,mBAAmB,CAACqB,eAAe,CAAEtB,KAAK,CAAE,oBAAoB,CAAC,CACnE,IAAA4B,oBAAA,CAAsB/B,mBAAmB,EAAE,CAAnCgC,SAAA,CAAAD,oBAAA,CAAAC,SAAA,CAER,MACE,CAAAlC,KAAA,CAAAmC,aAAA,CAAChC,IAAI,CAAAiC,QAAA,EACHrB,KAAK,CAAE,CACL,CACEsB,KAAK,CAAEvB,IAAI,CACXwB,MAAM,CAAExB,IAAI,CACZyB,YAAY,CAAEzB,IAAI,CAAG,CAAC,CACtBa,eAAA,CAAAA,eACF,CAAC,CACDa,MAAM,CAACC,SAAS,CAChBX,SAAS,CACT,EACET,IAAI,EAERrB,KAAA,CAAAmC,aAAA,CAAC5B,IAAI,EACHQ,KAAK,CAAE,CACLyB,MAAM,CAACE,IAAI,CACX,CACExB,KAAK,CAAEc,SAAS,CAChBW,QAAQ,CAAE7B,IAAI,CAAG,CAAC,CAClB8B,UAAU,CAAE9B,IAAI,CAAGoB,SACrB,CAAC,CACDlB,UAAU,CACV,CACF6B,aAAa,CAAE,CAAE,EAEhBjC,KAAK,CACD,CACF,CAEX,CAAC,CAEDH,UAAU,CAACqC,WAAW,CAAG,aAAa,CAEtC,GAAM,CAAAN,MAAM,CAAGvC,UAAU,CAAC8C,MAAM,CAAC,CAC/BN,SAAS,CAAE,CACTO,cAAc,CAAE,QAAQ,CACxBC,UAAU,CAAE,QACd,CAAC,CACDP,IAAI,CAAE,CACJQ,SAAS,CAAE,QAAQ,CACnBC,iBAAiB,CAAE,QACrB,CACF,CAAC,CAAC,CAEF,cAAe,CAAA1C,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}