{"ast":null,"code":"export default function getDrawerStatusFromState(state){var _ref,_ref2;if(state.history==null){throw new Error(\"Couldn't find the drawer status in the state object. Is it a valid state object of drawer navigator?\");}var entry=state.history.find(function(it){return it.type==='drawer';});return(_ref=(_ref2=entry===null||entry===void 0?void 0:entry.status)!=null?_ref2:state.default)!=null?_ref:'closed';}","map":{"version":3,"names":["getDrawerStatusFromState","state","_ref","_ref2","history","Error","entry","find","it","type","status","default"],"sources":["/home/ojoquinhaa/Documentos/trabalho/inktone/frontend/node_modules/@react-navigation/drawer/src/utils/getDrawerStatusFromState.tsx"],"sourcesContent":["import type {\n  DrawerNavigationState,\n  DrawerStatus,\n  ParamListBase,\n} from '@react-navigation/native';\n\nexport default function getDrawerStatusFromState(\n  state: DrawerNavigationState<ParamListBase>\n): DrawerStatus {\n  if (state.history == null) {\n    throw new Error(\n      \"Couldn't find the drawer status in the state object. Is it a valid state object of drawer navigator?\"\n    );\n  }\n\n  const entry = state.history.find((it) => it.type === 'drawer') as\n    | { type: 'drawer'; status: DrawerStatus }\n    | undefined;\n\n  return entry?.status ?? state.default ?? 'closed';\n}\n"],"mappings":"AAMA,cAAe,SAAS,CAAAA,wBAAwBA,CAC9CC,KAA2C,CAC7B,KAAAC,IAAA,CAAAC,KAAA,CACd,GAAIF,KAAK,CAACG,OAAO,EAAI,IAAI,CAAE,CACzB,KAAM,IAAI,CAAAC,KAAK,CACb,sGAAsG,CACvG,CACH,CAEA,GAAM,CAAAC,KAAK,CAAGL,KAAK,CAACG,OAAO,CAACG,IAAI,CAAE,SAAAC,EAAE,QAAK,CAAAA,EAAE,CAACC,IAAI,GAAK,QAAQ,GAEhD,CAEb,OAAAP,IAAA,EAAAC,KAAA,CAAOG,KAAK,SAALA,KAAK,iBAALA,KAAK,CAAEI,MAAM,QAAAP,KAAA,CAAIF,KAAK,CAACU,OAAO,QAAAT,IAAA,CAAI,QAAQ,CACnD"},"metadata":{},"sourceType":"module","externalDependencies":[]}