{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";var _excluded=[\"left\",\"right\",\"title\",\"description\",\"onPress\",\"theme\",\"style\",\"titleStyle\",\"titleNumberOfLines\",\"descriptionNumberOfLines\",\"titleEllipsizeMode\",\"descriptionEllipsizeMode\",\"descriptionStyle\"];function _extends(){_extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import*as React from'react';import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import View from\"react-native-web/dist/exports/View\";import color from'color';import{useInternalTheme}from\"../../core/theming\";import TouchableRipple from\"../TouchableRipple/TouchableRipple\";import Text from\"../Typography/Text\";import{getLeftStyles,getRightStyles}from\"./utils\";var ListItem=function ListItem(_ref){var left=_ref.left,right=_ref.right,title=_ref.title,description=_ref.description,onPress=_ref.onPress,themeOverrides=_ref.theme,style=_ref.style,titleStyle=_ref.titleStyle,_ref$titleNumberOfLin=_ref.titleNumberOfLines,titleNumberOfLines=_ref$titleNumberOfLin===void 0?1:_ref$titleNumberOfLin,_ref$descriptionNumbe=_ref.descriptionNumberOfLines,descriptionNumberOfLines=_ref$descriptionNumbe===void 0?2:_ref$descriptionNumbe,titleEllipsizeMode=_ref.titleEllipsizeMode,descriptionEllipsizeMode=_ref.descriptionEllipsizeMode,descriptionStyle=_ref.descriptionStyle,rest=_objectWithoutProperties(_ref,_excluded);var theme=useInternalTheme(themeOverrides);var _React$useState=React.useState(false),_React$useState2=_slicedToArray(_React$useState,2),alignToTop=_React$useState2[0],setAlignToTop=_React$useState2[1];var onDescriptionTextLayout=function onDescriptionTextLayout(event){if(!theme.isV3){return;}var nativeEvent=event.nativeEvent;setAlignToTop(nativeEvent.lines.length>=2);};var renderDescription=function renderDescription(descriptionColor,description){return typeof description==='function'?description({selectable:false,ellipsizeMode:descriptionEllipsizeMode,color:descriptionColor,fontSize:styles.description.fontSize}):React.createElement(Text,{selectable:false,numberOfLines:descriptionNumberOfLines,ellipsizeMode:descriptionEllipsizeMode,style:[styles.description,{color:descriptionColor},descriptionStyle],onTextLayout:onDescriptionTextLayout},description);};var renderTitle=function renderTitle(){var titleColor=theme.isV3?theme.colors.onSurface:color(theme.colors.text).alpha(0.87).rgb().string();return typeof title==='function'?title({selectable:false,ellipsizeMode:titleEllipsizeMode,color:titleColor,fontSize:styles.title.fontSize}):React.createElement(Text,{selectable:false,ellipsizeMode:titleEllipsizeMode,numberOfLines:titleNumberOfLines,style:[styles.title,{color:titleColor},titleStyle]},title);};var descriptionColor=theme.isV3?theme.colors.onSurfaceVariant:color(theme.colors.text).alpha(0.54).rgb().string();return React.createElement(TouchableRipple,_extends({},rest,{style:[theme.isV3?styles.containerV3:styles.container,style],onPress:onPress,theme:theme}),React.createElement(View,{style:theme.isV3?styles.rowV3:styles.row},left?left({color:descriptionColor,style:getLeftStyles(alignToTop,description,theme.isV3)}):null,React.createElement(View,{style:[theme.isV3?styles.itemV3:styles.item,styles.content]},renderTitle(),description?renderDescription(descriptionColor,description):null),right?right({color:descriptionColor,style:getRightStyles(alignToTop,description,theme.isV3)}):null));};ListItem.displayName='List.Item';var styles=StyleSheet.create({container:{padding:8},containerV3:{paddingVertical:8,paddingRight:24},row:{width:'100%',flexDirection:'row'},rowV3:{width:'100%',flexDirection:'row',marginVertical:6},title:{fontSize:16},description:{fontSize:14},item:{marginVertical:6,paddingLeft:8},itemV3:{paddingLeft:16},content:{flex:1,justifyContent:'center'}});export default ListItem;","map":{"version":3,"names":["React","StyleSheet","View","color","useInternalTheme","TouchableRipple","Text","getLeftStyles","getRightStyles","ListItem","_ref","left","right","title","description","onPress","themeOverrides","theme","style","titleStyle","_ref$titleNumberOfLin","titleNumberOfLines","_ref$descriptionNumbe","descriptionNumberOfLines","titleEllipsizeMode","descriptionEllipsizeMode","descriptionStyle","rest","_objectWithoutProperties","_excluded","_React$useState","useState","_React$useState2","_slicedToArray","alignToTop","setAlignToTop","onDescriptionTextLayout","event","isV3","nativeEvent","lines","length","renderDescription","descriptionColor","selectable","ellipsizeMode","fontSize","styles","createElement","numberOfLines","onTextLayout","renderTitle","titleColor","colors","onSurface","text","alpha","rgb","string","onSurfaceVariant","_extends","containerV3","container","rowV3","row","itemV3","item","content","displayName","create","padding","paddingVertical","paddingRight","width","flexDirection","marginVertical","paddingLeft","flex","justifyContent"],"sources":["/home/ojoquinhaa/Documentos/trabalho/inktone/frontend/node_modules/react-native-paper/src/components/List/ListItem.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  GestureResponderEvent,\n  NativeSyntheticEvent,\n  StyleProp,\n  StyleSheet,\n  TextLayoutEventData,\n  TextStyle,\n  View,\n  ViewStyle,\n} from 'react-native';\n\nimport color from 'color';\n\nimport { useInternalTheme } from '../../core/theming';\nimport type { $RemoveChildren, EllipsizeProp, ThemeProp } from '../../types';\nimport TouchableRipple from '../TouchableRipple/TouchableRipple';\nimport Text from '../Typography/Text';\nimport { Style, getLeftStyles, getRightStyles } from './utils';\n\ntype Title =\n  | React.ReactNode\n  | ((props: {\n      selectable: boolean;\n      ellipsizeMode: EllipsizeProp | undefined;\n      color: string;\n      fontSize: number;\n    }) => React.ReactNode);\n\ntype Description =\n  | React.ReactNode\n  | ((props: {\n      selectable: boolean;\n      ellipsizeMode: EllipsizeProp | undefined;\n      color: string;\n      fontSize: number;\n    }) => React.ReactNode);\n\nexport type Props = $RemoveChildren<typeof TouchableRipple> & {\n  /**\n   * Title text for the list item.\n   */\n  title: Title;\n  /**\n   * Description text for the list item or callback which returns a React element to display the description.\n   */\n  description?: Description;\n  /**\n   * Callback which returns a React element to display on the left side.\n   */\n  left?: (props: { color: string; style: Style }) => React.ReactNode;\n  /**\n   * Callback which returns a React element to display on the right side.\n   */\n  right?: (props: { color: string; style?: Style }) => React.ReactNode;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: (e: GestureResponderEvent) => void;\n  /**\n   * @optional\n   */\n  theme?: ThemeProp;\n  /**\n   * Style that is passed to the wrapping TouchableRipple element.\n   */\n  style?: StyleProp<ViewStyle>;\n  /**\n   * Style that is passed to Title element.\n   */\n  titleStyle?: StyleProp<TextStyle>;\n  /**\n   * Style that is passed to Description element.\n   */\n  descriptionStyle?: StyleProp<TextStyle>;\n  /**\n   * Truncate Title text such that the total number of lines does not\n   * exceed this number.\n   */\n  titleNumberOfLines?: number;\n  /**\n   * Truncate Description text such that the total number of lines does not\n   * exceed this number.\n   */\n  descriptionNumberOfLines?: number;\n  /**\n   * Ellipsize Mode for the Title.  One of `'head'`, `'middle'`, `'tail'`, `'clip'`.\n   *\n   * See [`ellipsizeMode`](https://reactnative.dev/docs/text#ellipsizemode)\n   */\n  titleEllipsizeMode?: EllipsizeProp;\n  /**\n   * Ellipsize Mode for the Description.  One of `'head'`, `'middle'`, `'tail'`, `'clip'`.\n   *\n   * See [`ellipsizeMode`](https://reactnative.dev/docs/text#ellipsizemode)\n   */\n  descriptionEllipsizeMode?: EllipsizeProp;\n};\n\n/**\n * A component to show tiles inside a List.\n *\n * <div class=\"screenshots\">\n *   <img class=\"medium\" src=\"screenshots/list-item-1.png\" />\n *   <img class=\"medium\" src=\"screenshots/list-item-2.png\" />\n *   <img class=\"medium\" src=\"screenshots/list-item-3.png\" />\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { List } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <List.Item\n *     title=\"First Item\"\n *     description=\"Item description\"\n *     left={props => <List.Icon {...props} icon=\"folder\" />}\n *   />\n * );\n *\n * export default MyComponent;\n * ```\n *\n * @extends TouchableRipple props https://callstack.github.io/react-native-paper/docs/components/TouchableRipple\n */\nconst ListItem = ({\n  left,\n  right,\n  title,\n  description,\n  onPress,\n  theme: themeOverrides,\n  style,\n  titleStyle,\n  titleNumberOfLines = 1,\n  descriptionNumberOfLines = 2,\n  titleEllipsizeMode,\n  descriptionEllipsizeMode,\n  descriptionStyle,\n  ...rest\n}: Props) => {\n  const theme = useInternalTheme(themeOverrides);\n  const [alignToTop, setAlignToTop] = React.useState(false);\n\n  const onDescriptionTextLayout = (\n    event: NativeSyntheticEvent<TextLayoutEventData>\n  ) => {\n    if (!theme.isV3) {\n      return;\n    }\n    const { nativeEvent } = event;\n    setAlignToTop(nativeEvent.lines.length >= 2);\n  };\n\n  const renderDescription = (\n    descriptionColor: string,\n    description?: Description | null\n  ) => {\n    return typeof description === 'function' ? (\n      description({\n        selectable: false,\n        ellipsizeMode: descriptionEllipsizeMode,\n        color: descriptionColor,\n        fontSize: styles.description.fontSize,\n      })\n    ) : (\n      <Text\n        selectable={false}\n        numberOfLines={descriptionNumberOfLines}\n        ellipsizeMode={descriptionEllipsizeMode}\n        style={[\n          styles.description,\n          { color: descriptionColor },\n          descriptionStyle,\n        ]}\n        onTextLayout={onDescriptionTextLayout}\n      >\n        {description}\n      </Text>\n    );\n  };\n\n  const renderTitle = () => {\n    const titleColor = theme.isV3\n      ? theme.colors.onSurface\n      : color(theme.colors.text).alpha(0.87).rgb().string();\n\n    return typeof title === 'function' ? (\n      title({\n        selectable: false,\n        ellipsizeMode: titleEllipsizeMode,\n        color: titleColor,\n        fontSize: styles.title.fontSize,\n      })\n    ) : (\n      <Text\n        selectable={false}\n        ellipsizeMode={titleEllipsizeMode}\n        numberOfLines={titleNumberOfLines}\n        style={[styles.title, { color: titleColor }, titleStyle]}\n      >\n        {title}\n      </Text>\n    );\n  };\n\n  const descriptionColor = theme.isV3\n    ? theme.colors.onSurfaceVariant\n    : color(theme.colors.text).alpha(0.54).rgb().string();\n\n  return (\n    <TouchableRipple\n      {...rest}\n      style={[theme.isV3 ? styles.containerV3 : styles.container, style]}\n      onPress={onPress}\n      theme={theme}\n    >\n      <View style={theme.isV3 ? styles.rowV3 : styles.row}>\n        {left\n          ? left({\n              color: descriptionColor,\n              style: getLeftStyles(alignToTop, description, theme.isV3),\n            })\n          : null}\n        <View\n          style={[theme.isV3 ? styles.itemV3 : styles.item, styles.content]}\n        >\n          {renderTitle()}\n\n          {description\n            ? renderDescription(descriptionColor, description)\n            : null}\n        </View>\n        {right\n          ? right({\n              color: descriptionColor,\n              style: getRightStyles(alignToTop, description, theme.isV3),\n            })\n          : null}\n      </View>\n    </TouchableRipple>\n  );\n};\n\nListItem.displayName = 'List.Item';\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 8,\n  },\n  containerV3: {\n    paddingVertical: 8,\n    paddingRight: 24,\n  },\n  row: {\n    width: '100%',\n    flexDirection: 'row',\n  },\n  rowV3: {\n    width: '100%',\n    flexDirection: 'row',\n    marginVertical: 6,\n  },\n  title: {\n    fontSize: 16,\n  },\n  description: {\n    fontSize: 14,\n  },\n  item: {\n    marginVertical: 6,\n    paddingLeft: 8,\n  },\n  itemV3: {\n    paddingLeft: 16,\n  },\n  content: {\n    flex: 1,\n    justifyContent: 'center',\n  },\n});\n\nexport default ListItem;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}